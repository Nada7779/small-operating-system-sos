
SOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000106a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  0000106a  000010fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002d  00800092  00800092  00001130  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001130  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001160  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d8  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b79  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fff  00000000  00000000  00003fed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001df7  00000000  00000000  00004fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005d8  00000000  00000000  00006de4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001118  00000000  00000000  000073bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000208e  00000000  00000000  000084d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000a562  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__vector_1>
       8:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__vector_2>
       c:	0c 94 27 02 	jmp	0x44e	; 0x44e <__vector_3>
      10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      14:	0c 94 b6 03 	jmp	0x76c	; 0x76c <__vector_5>
      18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      24:	0c 94 86 03 	jmp	0x70c	; 0x70c <__vector_9>
      28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      2c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__vector_11>
      30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
      54:	93 04       	cpc	r9, r3
      56:	9e 04       	cpc	r9, r14
      58:	a9 04       	cpc	r10, r9
      5a:	b9 05       	cpc	r27, r9
      5c:	b4 04       	cpc	r11, r4
      5e:	b9 05       	cpc	r27, r9
      60:	bf 04       	cpc	r11, r15
      62:	ca 04       	cpc	r12, r10
      64:	d5 04       	cpc	r13, r5
      66:	e0 04       	cpc	r14, r0
      68:	f6 04       	cpc	r15, r6
      6a:	01 05       	cpc	r16, r1
      6c:	0c 05       	cpc	r16, r12
      6e:	bb 05       	cpc	r27, r11
      70:	17 05       	cpc	r17, r7
      72:	bb 05       	cpc	r27, r11
      74:	22 05       	cpc	r18, r2
      76:	2d 05       	cpc	r18, r13
      78:	38 05       	cpc	r19, r8
      7a:	43 05       	cpc	r20, r3
      7c:	59 05       	cpc	r21, r9
      7e:	64 05       	cpc	r22, r4
      80:	6f 05       	cpc	r22, r15
      82:	7a 05       	cpc	r23, r10
      84:	85 05       	cpc	r24, r5
      86:	90 05       	cpc	r25, r0
      88:	9b 05       	cpc	r25, r11
      8a:	a6 05       	cpc	r26, r6

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf e5       	ldi	r28, 0x5F	; 95
      92:	d8 e0       	ldi	r29, 0x08	; 8
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	10 e0       	ldi	r17, 0x00	; 0
      9a:	a0 e6       	ldi	r26, 0x60	; 96
      9c:	b0 e0       	ldi	r27, 0x00	; 0
      9e:	ea e6       	ldi	r30, 0x6A	; 106
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
      a4:	05 90       	lpm	r0, Z+
      a6:	0d 92       	st	X+, r0
      a8:	a2 39       	cpi	r26, 0x92	; 146
      aa:	b1 07       	cpc	r27, r17
      ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	a2 e9       	ldi	r26, 0x92	; 146
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
      b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
      b8:	af 3b       	cpi	r26, 0xBF	; 191
      ba:	b2 07       	cpc	r27, r18
      bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
      be:	0e 94 22 01 	call	0x244	; 0x244 <main>
      c2:	0c 94 33 08 	jmp	0x1066	; 0x1066 <_exit>

000000c6 <__bad_interrupt>:
      c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <Start_sos_handler>:
volatile static uint16_t u8_sg_counter;


static void Start_sos_handler(void)
{
	Start_Flag=1;
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <Start_Flag>
      d0:	08 95       	ret

000000d2 <Stop_sos_handler>:
}

static void Stop_sos_handler(void)
{
	Start_Flag=2;
      d2:	82 e0       	ldi	r24, 0x02	; 2
      d4:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <Start_Flag>
      d8:	08 95       	ret

000000da <task_2_handler>:
}


static void task_2_handler(void)
{	
	LED_turn_toggle(&st_g_led1_instance);
      da:	80 e6       	ldi	r24, 0x60	; 96
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	0e 94 10 01 	call	0x220	; 0x220 <LED_turn_toggle>
	u8_sg_counter++;
      e2:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <__data_end>
      e6:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <__data_end+0x1>
      ea:	01 96       	adiw	r24, 0x01	; 1
      ec:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <__data_end+0x1>
      f0:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <__data_end>
      f4:	08 95       	ret

000000f6 <task_1_handler>:
	Start_Flag=2;
}

static void task_1_handler(void)
{
	LED_turn_toggle(&st_g_led0_instance);	
      f6:	83 e6       	ldi	r24, 0x63	; 99
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	0e 94 10 01 	call	0x220	; 0x220 <LED_turn_toggle>
      fe:	08 95       	ret

00000100 <APP_init>:
	u8_sg_counter++;
}

void APP_init()
{
	GLOBAL_InterruptEnable();
     100:	8f b7       	in	r24, 0x3f	; 63
     102:	80 68       	ori	r24, 0x80	; 128
     104:	8f bf       	out	0x3f, r24	; 63
	sei();
     106:	78 94       	sei
	enu_sg_ret |=SOS_init();
     108:	0e 94 bb 06 	call	0xd76	; 0xd76 <SOS_init>
     10c:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     110:	89 2b       	or	r24, r25
     112:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	if(SOS_E_NOK==enu_sg_ret)
	{
		// handle TASK fail initialization
	}
	enu_sg_ret = LED_initialize(&st_g_led0_instance);
     116:	83 e6       	ldi	r24, 0x63	; 99
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <LED_initialize>
     11e:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	if(E_NOT_OK==enu_sg_ret)
	{
		// handle led fail initialization
	}
	enu_sg_ret |= LED_initialize(&st_g_led1_instance);
     122:	80 e6       	ldi	r24, 0x60	; 96
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 e7 00 	call	0x1ce	; 0x1ce <LED_initialize>
     12a:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     12e:	89 2b       	or	r24, r25
     130:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	if(E_NOT_OK==enu_sg_ret)
	{
		// handle led fail initialization
	}
	str_g_task_1_.Fptr_task_callBack = task_1_handler;
     134:	8b e7       	ldi	r24, 0x7B	; 123
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <str_g_task_1_+0x6>
     13c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <str_g_task_1_+0x5>
	enu_sg_ret |=SOS_create_task(&str_g_task_1_);
     140:	8f e6       	ldi	r24, 0x6F	; 111
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	0e 94 98 07 	call	0xf30	; 0xf30 <SOS_create_task>
     148:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     14c:	89 2b       	or	r24, r25
     14e:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	if(SOS_E_NOK==enu_sg_ret)
	{
		// handle TASK fail initialization
	}
	str_g_task_2_.Fptr_task_callBack = task_2_handler;
     152:	8d e6       	ldi	r24, 0x6D	; 109
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <str_g_task_2_+0x6>
     15a:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <str_g_task_2_+0x5>
	enu_sg_ret |=SOS_create_task(&str_g_task_2_);
     15e:	88 e6       	ldi	r24, 0x68	; 104
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	0e 94 98 07 	call	0xf30	; 0xf30 <SOS_create_task>
     166:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     16a:	89 2b       	or	r24, r25
     16c:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	if(SOS_E_NOK==enu_sg_ret)
	{
		// handle TASK fail initialization
	}
/********************************************External interrupt for start & stop SOS********************************************************************/
       enu_sg_ret|= EXT_INTx_setCallBack_manger(&Start_sos_handler,INTERRUPT_EXTERNAL_INT0);
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	85 e6       	ldi	r24, 0x65	; 101
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	0e 94 ca 07 	call	0xf94	; 0xf94 <EXT_INTx_setCallBack_manger>
     17a:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     17e:	89 2b       	or	r24, r25
     180:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	   }
	   else
	   {
		   //do nothing
	   }
       enu_sg_ret|= EXT_INTx_Init_manger(&s_INT0);
     184:	88 e7       	ldi	r24, 0x78	; 120
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	0e 94 d5 07 	call	0xfaa	; 0xfaa <EXT_INTx_Init_manger>
     18c:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     190:	89 2b       	or	r24, r25
     192:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
	    }
		else
		{
			//do nothing
		}
		enu_sg_ret|= EXT_INTx_setCallBack_manger(&Stop_sos_handler,INTERRUPT_EXTERNAL_INT1);
     196:	61 e0       	ldi	r22, 0x01	; 1
     198:	89 e6       	ldi	r24, 0x69	; 105
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	0e 94 ca 07 	call	0xf94	; 0xf94 <EXT_INTx_setCallBack_manger>
     1a0:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     1a4:	89 2b       	or	r24, r25
     1a6:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
		}
		else
		{
			//do nothing
		}
		enu_sg_ret|= EXT_INTx_Init_manger(&s_INT1);
     1aa:	86 e7       	ldi	r24, 0x76	; 118
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	0e 94 d5 07 	call	0xfaa	; 0xfaa <EXT_INTx_Init_manger>
     1b2:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <enu_sg_ret>
     1b6:	89 2b       	or	r24, r25
     1b8:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <enu_sg_ret>
		}
		else
		{
			//do nothing
		}
		DDRC=0xff;
     1bc:	8f ef       	ldi	r24, 0xFF	; 255
     1be:	84 bb       	out	0x14, r24	; 20
		PORTC=0;
     1c0:	15 ba       	out	0x15, r1	; 21
		DDRA=0xff;
     1c2:	8a bb       	out	0x1a, r24	; 26
		PORTA=0;
     1c4:	1b ba       	out	0x1b, r1	; 27
     1c6:	08 95       	ret

000001c8 <APP_start>:
}

void APP_start()
{	
		SOS_run();
     1c8:	0e 94 f0 06 	call	0xde0	; 0xde0 <SOS_run>
     1cc:	08 95       	ret

000001ce <LED_initialize>:
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	00 97       	sbiw	r24, 0x00	; 0
     1d4:	d9 f0       	breq	.+54     	; 0x20c <LED_initialize+0x3e>
     1d6:	fc 01       	movw	r30, r24
     1d8:	21 81       	ldd	r18, Z+1	; 0x01
     1da:	28 30       	cpi	r18, 0x08	; 8
     1dc:	c8 f4       	brcc	.+50     	; 0x210 <LED_initialize+0x42>
     1de:	20 81       	ld	r18, Z
     1e0:	24 30       	cpi	r18, 0x04	; 4
     1e2:	c0 f4       	brcc	.+48     	; 0x214 <LED_initialize+0x46>
     1e4:	ec 01       	movw	r28, r24
     1e6:	61 e0       	ldi	r22, 0x01	; 1
     1e8:	0e 94 29 01 	call	0x252	; 0x252 <DIO_pin_direction_intialize>
     1ec:	8a 81       	ldd	r24, Y+2	; 0x02
     1ee:	88 23       	and	r24, r24
     1f0:	19 f0       	breq	.+6      	; 0x1f8 <LED_initialize+0x2a>
     1f2:	81 30       	cpi	r24, 0x01	; 1
     1f4:	31 f0       	breq	.+12     	; 0x202 <LED_initialize+0x34>
     1f6:	10 c0       	rjmp	.+32     	; 0x218 <LED_initialize+0x4a>
     1f8:	60 e0       	ldi	r22, 0x00	; 0
     1fa:	ce 01       	movw	r24, r28
     1fc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_pin_write_logic>
     200:	0c c0       	rjmp	.+24     	; 0x21a <LED_initialize+0x4c>
     202:	61 e0       	ldi	r22, 0x01	; 1
     204:	ce 01       	movw	r24, r28
     206:	0e 94 69 01 	call	0x2d2	; 0x2d2 <DIO_pin_write_logic>
     20a:	07 c0       	rjmp	.+14     	; 0x21a <LED_initialize+0x4c>
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	05 c0       	rjmp	.+10     	; 0x21a <LED_initialize+0x4c>
     210:	80 e0       	ldi	r24, 0x00	; 0
     212:	03 c0       	rjmp	.+6      	; 0x21a <LED_initialize+0x4c>
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	01 c0       	rjmp	.+2      	; 0x21a <LED_initialize+0x4c>
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	df 91       	pop	r29
     21c:	cf 91       	pop	r28
     21e:	08 95       	ret

00000220 <LED_turn_toggle>:
     220:	00 97       	sbiw	r24, 0x00	; 0
     222:	51 f0       	breq	.+20     	; 0x238 <LED_turn_toggle+0x18>
     224:	fc 01       	movw	r30, r24
     226:	21 81       	ldd	r18, Z+1	; 0x01
     228:	28 30       	cpi	r18, 0x08	; 8
     22a:	40 f4       	brcc	.+16     	; 0x23c <LED_turn_toggle+0x1c>
     22c:	20 81       	ld	r18, Z
     22e:	24 30       	cpi	r18, 0x04	; 4
     230:	38 f4       	brcc	.+14     	; 0x240 <LED_turn_toggle+0x20>
     232:	0e 94 aa 01 	call	0x354	; 0x354 <DIO_pin_toggle_logic>
     236:	08 95       	ret
     238:	80 e0       	ldi	r24, 0x00	; 0
     23a:	08 95       	ret
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	08 95       	ret
     240:	80 e0       	ldi	r24, 0x00	; 0
     242:	08 95       	ret

00000244 <main>:



int main(void)
{
	APP_init();
     244:	0e 94 80 00 	call	0x100	; 0x100 <APP_init>
	APP_start();
     248:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <APP_start>

}
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	08 95       	ret

00000252 <DIO_pin_direction_intialize>:
     252:	00 97       	sbiw	r24, 0x00	; 0
     254:	b1 f1       	breq	.+108    	; 0x2c2 <DIO_pin_direction_intialize+0x70>
     256:	dc 01       	movw	r26, r24
     258:	11 96       	adiw	r26, 0x01	; 1
     25a:	2c 91       	ld	r18, X
     25c:	11 97       	sbiw	r26, 0x01	; 1
     25e:	28 30       	cpi	r18, 0x08	; 8
     260:	90 f5       	brcc	.+100    	; 0x2c6 <DIO_pin_direction_intialize+0x74>
     262:	ec 91       	ld	r30, X
     264:	e4 30       	cpi	r30, 0x04	; 4
     266:	88 f5       	brcc	.+98     	; 0x2ca <DIO_pin_direction_intialize+0x78>
     268:	66 23       	and	r22, r22
     26a:	b1 f0       	breq	.+44     	; 0x298 <DIO_pin_direction_intialize+0x46>
     26c:	61 30       	cpi	r22, 0x01	; 1
     26e:	79 f5       	brne	.+94     	; 0x2ce <DIO_pin_direction_intialize+0x7c>
     270:	f0 e0       	ldi	r31, 0x00	; 0
     272:	ee 0f       	add	r30, r30
     274:	ff 1f       	adc	r31, r31
     276:	e7 57       	subi	r30, 0x77	; 119
     278:	ff 4f       	sbci	r31, 0xFF	; 255
     27a:	01 90       	ld	r0, Z+
     27c:	f0 81       	ld	r31, Z
     27e:	e0 2d       	mov	r30, r0
     280:	30 81       	ld	r19, Z
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_pin_direction_intialize+0x3a>
     288:	88 0f       	add	r24, r24
     28a:	99 1f       	adc	r25, r25
     28c:	2a 95       	dec	r18
     28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_pin_direction_intialize+0x36>
     290:	83 2b       	or	r24, r19
     292:	80 83       	st	Z, r24
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	08 95       	ret
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	ee 0f       	add	r30, r30
     29c:	ff 1f       	adc	r31, r31
     29e:	e7 57       	subi	r30, 0x77	; 119
     2a0:	ff 4f       	sbci	r31, 0xFF	; 255
     2a2:	01 90       	ld	r0, Z+
     2a4:	f0 81       	ld	r31, Z
     2a6:	e0 2d       	mov	r30, r0
     2a8:	30 81       	ld	r19, Z
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_pin_direction_intialize+0x62>
     2b0:	88 0f       	add	r24, r24
     2b2:	99 1f       	adc	r25, r25
     2b4:	2a 95       	dec	r18
     2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_pin_direction_intialize+0x5e>
     2b8:	80 95       	com	r24
     2ba:	83 23       	and	r24, r19
     2bc:	80 83       	st	Z, r24
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	08 95       	ret
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	08 95       	ret
     2c6:	80 e0       	ldi	r24, 0x00	; 0
     2c8:	08 95       	ret
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	08 95       	ret
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	08 95       	ret

000002d2 <DIO_pin_write_logic>:
     2d2:	00 97       	sbiw	r24, 0x00	; 0
     2d4:	b9 f1       	breq	.+110    	; 0x344 <DIO_pin_write_logic+0x72>
     2d6:	dc 01       	movw	r26, r24
     2d8:	11 96       	adiw	r26, 0x01	; 1
     2da:	2c 91       	ld	r18, X
     2dc:	11 97       	sbiw	r26, 0x01	; 1
     2de:	28 30       	cpi	r18, 0x08	; 8
     2e0:	98 f5       	brcc	.+102    	; 0x348 <DIO_pin_write_logic+0x76>
     2e2:	ec 91       	ld	r30, X
     2e4:	e4 30       	cpi	r30, 0x04	; 4
     2e6:	90 f5       	brcc	.+100    	; 0x34c <DIO_pin_write_logic+0x7a>
     2e8:	66 23       	and	r22, r22
     2ea:	19 f0       	breq	.+6      	; 0x2f2 <DIO_pin_write_logic+0x20>
     2ec:	61 30       	cpi	r22, 0x01	; 1
     2ee:	b1 f0       	breq	.+44     	; 0x31c <DIO_pin_write_logic+0x4a>
     2f0:	2f c0       	rjmp	.+94     	; 0x350 <DIO_pin_write_logic+0x7e>
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ee 0f       	add	r30, r30
     2f6:	ff 1f       	adc	r31, r31
     2f8:	ef 57       	subi	r30, 0x7F	; 127
     2fa:	ff 4f       	sbci	r31, 0xFF	; 255
     2fc:	01 90       	ld	r0, Z+
     2fe:	f0 81       	ld	r31, Z
     300:	e0 2d       	mov	r30, r0
     302:	30 81       	ld	r19, Z
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_pin_write_logic+0x3c>
     30a:	88 0f       	add	r24, r24
     30c:	99 1f       	adc	r25, r25
     30e:	2a 95       	dec	r18
     310:	e2 f7       	brpl	.-8      	; 0x30a <DIO_pin_write_logic+0x38>
     312:	80 95       	com	r24
     314:	83 23       	and	r24, r19
     316:	80 83       	st	Z, r24
     318:	81 e0       	ldi	r24, 0x01	; 1
     31a:	08 95       	ret
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	ee 0f       	add	r30, r30
     320:	ff 1f       	adc	r31, r31
     322:	ef 57       	subi	r30, 0x7F	; 127
     324:	ff 4f       	sbci	r31, 0xFF	; 255
     326:	01 90       	ld	r0, Z+
     328:	f0 81       	ld	r31, Z
     32a:	e0 2d       	mov	r30, r0
     32c:	30 81       	ld	r19, Z
     32e:	81 e0       	ldi	r24, 0x01	; 1
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_pin_write_logic+0x66>
     334:	88 0f       	add	r24, r24
     336:	99 1f       	adc	r25, r25
     338:	2a 95       	dec	r18
     33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_pin_write_logic+0x62>
     33c:	83 2b       	or	r24, r19
     33e:	80 83       	st	Z, r24
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	08 95       	ret
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	08 95       	ret
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	08 95       	ret
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	08 95       	ret
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	08 95       	ret

00000354 <DIO_pin_toggle_logic>:
     354:	00 97       	sbiw	r24, 0x00	; 0
     356:	e9 f0       	breq	.+58     	; 0x392 <DIO_pin_toggle_logic+0x3e>
     358:	dc 01       	movw	r26, r24
     35a:	11 96       	adiw	r26, 0x01	; 1
     35c:	2c 91       	ld	r18, X
     35e:	11 97       	sbiw	r26, 0x01	; 1
     360:	28 30       	cpi	r18, 0x08	; 8
     362:	c8 f4       	brcc	.+50     	; 0x396 <DIO_pin_toggle_logic+0x42>
     364:	ec 91       	ld	r30, X
     366:	e4 30       	cpi	r30, 0x04	; 4
     368:	c0 f4       	brcc	.+48     	; 0x39a <DIO_pin_toggle_logic+0x46>
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	ee 0f       	add	r30, r30
     36e:	ff 1f       	adc	r31, r31
     370:	ef 57       	subi	r30, 0x7F	; 127
     372:	ff 4f       	sbci	r31, 0xFF	; 255
     374:	01 90       	ld	r0, Z+
     376:	f0 81       	ld	r31, Z
     378:	e0 2d       	mov	r30, r0
     37a:	30 81       	ld	r19, Z
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	02 c0       	rjmp	.+4      	; 0x386 <DIO_pin_toggle_logic+0x32>
     382:	88 0f       	add	r24, r24
     384:	99 1f       	adc	r25, r25
     386:	2a 95       	dec	r18
     388:	e2 f7       	brpl	.-8      	; 0x382 <DIO_pin_toggle_logic+0x2e>
     38a:	83 27       	eor	r24, r19
     38c:	80 83       	st	Z, r24
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	08 95       	ret
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	08 95       	ret
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	08 95       	ret
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	08 95       	ret

0000039e <__vector_1>:
     39e:	1f 92       	push	r1
     3a0:	0f 92       	push	r0
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	0f 92       	push	r0
     3a6:	11 24       	eor	r1, r1
     3a8:	2f 93       	push	r18
     3aa:	3f 93       	push	r19
     3ac:	4f 93       	push	r20
     3ae:	5f 93       	push	r21
     3b0:	6f 93       	push	r22
     3b2:	7f 93       	push	r23
     3b4:	8f 93       	push	r24
     3b6:	9f 93       	push	r25
     3b8:	af 93       	push	r26
     3ba:	bf 93       	push	r27
     3bc:	ef 93       	push	r30
     3be:	ff 93       	push	r31
     3c0:	8a b7       	in	r24, 0x3a	; 58
     3c2:	80 64       	ori	r24, 0x40	; 64
     3c4:	8a bf       	out	0x3a, r24	; 58
     3c6:	e0 91 99 00 	lds	r30, 0x0099	; 0x800099 <g_EXT_INT0_fptr>
     3ca:	f0 91 9a 00 	lds	r31, 0x009A	; 0x80009a <g_EXT_INT0_fptr+0x1>
     3ce:	30 97       	sbiw	r30, 0x00	; 0
     3d0:	09 f0       	breq	.+2      	; 0x3d4 <__vector_1+0x36>
     3d2:	09 95       	icall
     3d4:	ff 91       	pop	r31
     3d6:	ef 91       	pop	r30
     3d8:	bf 91       	pop	r27
     3da:	af 91       	pop	r26
     3dc:	9f 91       	pop	r25
     3de:	8f 91       	pop	r24
     3e0:	7f 91       	pop	r23
     3e2:	6f 91       	pop	r22
     3e4:	5f 91       	pop	r21
     3e6:	4f 91       	pop	r20
     3e8:	3f 91       	pop	r19
     3ea:	2f 91       	pop	r18
     3ec:	0f 90       	pop	r0
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	0f 90       	pop	r0
     3f2:	1f 90       	pop	r1
     3f4:	18 95       	reti

000003f6 <__vector_2>:
     3f6:	1f 92       	push	r1
     3f8:	0f 92       	push	r0
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	0f 92       	push	r0
     3fe:	11 24       	eor	r1, r1
     400:	2f 93       	push	r18
     402:	3f 93       	push	r19
     404:	4f 93       	push	r20
     406:	5f 93       	push	r21
     408:	6f 93       	push	r22
     40a:	7f 93       	push	r23
     40c:	8f 93       	push	r24
     40e:	9f 93       	push	r25
     410:	af 93       	push	r26
     412:	bf 93       	push	r27
     414:	ef 93       	push	r30
     416:	ff 93       	push	r31
     418:	8a b7       	in	r24, 0x3a	; 58
     41a:	80 68       	ori	r24, 0x80	; 128
     41c:	8a bf       	out	0x3a, r24	; 58
     41e:	e0 91 97 00 	lds	r30, 0x0097	; 0x800097 <g_EXT_INT1_fptr>
     422:	f0 91 98 00 	lds	r31, 0x0098	; 0x800098 <g_EXT_INT1_fptr+0x1>
     426:	30 97       	sbiw	r30, 0x00	; 0
     428:	09 f0       	breq	.+2      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     42a:	09 95       	icall
     42c:	ff 91       	pop	r31
     42e:	ef 91       	pop	r30
     430:	bf 91       	pop	r27
     432:	af 91       	pop	r26
     434:	9f 91       	pop	r25
     436:	8f 91       	pop	r24
     438:	7f 91       	pop	r23
     43a:	6f 91       	pop	r22
     43c:	5f 91       	pop	r21
     43e:	4f 91       	pop	r20
     440:	3f 91       	pop	r19
     442:	2f 91       	pop	r18
     444:	0f 90       	pop	r0
     446:	0f be       	out	0x3f, r0	; 63
     448:	0f 90       	pop	r0
     44a:	1f 90       	pop	r1
     44c:	18 95       	reti

0000044e <__vector_3>:
     44e:	1f 92       	push	r1
     450:	0f 92       	push	r0
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	0f 92       	push	r0
     456:	11 24       	eor	r1, r1
     458:	2f 93       	push	r18
     45a:	3f 93       	push	r19
     45c:	4f 93       	push	r20
     45e:	5f 93       	push	r21
     460:	6f 93       	push	r22
     462:	7f 93       	push	r23
     464:	8f 93       	push	r24
     466:	9f 93       	push	r25
     468:	af 93       	push	r26
     46a:	bf 93       	push	r27
     46c:	ef 93       	push	r30
     46e:	ff 93       	push	r31
     470:	8a b7       	in	r24, 0x3a	; 58
     472:	80 68       	ori	r24, 0x80	; 128
     474:	8a bf       	out	0x3a, r24	; 58
     476:	e0 91 95 00 	lds	r30, 0x0095	; 0x800095 <g_EXT_INT2_fptr>
     47a:	f0 91 96 00 	lds	r31, 0x0096	; 0x800096 <g_EXT_INT2_fptr+0x1>
     47e:	30 97       	sbiw	r30, 0x00	; 0
     480:	09 f0       	breq	.+2      	; 0x484 <__vector_3+0x36>
     482:	09 95       	icall
     484:	ff 91       	pop	r31
     486:	ef 91       	pop	r30
     488:	bf 91       	pop	r27
     48a:	af 91       	pop	r26
     48c:	9f 91       	pop	r25
     48e:	8f 91       	pop	r24
     490:	7f 91       	pop	r23
     492:	6f 91       	pop	r22
     494:	5f 91       	pop	r21
     496:	4f 91       	pop	r20
     498:	3f 91       	pop	r19
     49a:	2f 91       	pop	r18
     49c:	0f 90       	pop	r0
     49e:	0f be       	out	0x3f, r0	; 63
     4a0:	0f 90       	pop	r0
     4a2:	1f 90       	pop	r1
     4a4:	18 95       	reti

000004a6 <EXT_INTx_setCallBack>:
     4a6:	00 97       	sbiw	r24, 0x00	; 0
     4a8:	d1 f0       	breq	.+52     	; 0x4de <EXT_INTx_setCallBack+0x38>
     4aa:	63 30       	cpi	r22, 0x03	; 3
     4ac:	d0 f4       	brcc	.+52     	; 0x4e2 <EXT_INTx_setCallBack+0x3c>
     4ae:	61 30       	cpi	r22, 0x01	; 1
     4b0:	51 f0       	breq	.+20     	; 0x4c6 <EXT_INTx_setCallBack+0x20>
     4b2:	18 f0       	brcs	.+6      	; 0x4ba <EXT_INTx_setCallBack+0x14>
     4b4:	62 30       	cpi	r22, 0x02	; 2
     4b6:	69 f0       	breq	.+26     	; 0x4d2 <EXT_INTx_setCallBack+0x2c>
     4b8:	16 c0       	rjmp	.+44     	; 0x4e6 <EXT_INTx_setCallBack+0x40>
     4ba:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <g_EXT_INT0_fptr+0x1>
     4be:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <g_EXT_INT0_fptr>
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	08 95       	ret
     4c6:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <g_EXT_INT1_fptr+0x1>
     4ca:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <g_EXT_INT1_fptr>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	08 95       	ret
     4d2:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <g_EXT_INT2_fptr+0x1>
     4d6:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <g_EXT_INT2_fptr>
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	08 95       	ret
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	08 95       	ret
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	08 95       	ret
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret

000004ea <EXT_INTx_setEdgeType>:
     4ea:	63 30       	cpi	r22, 0x03	; 3
     4ec:	08 f0       	brcs	.+2      	; 0x4f0 <EXT_INTx_setEdgeType+0x6>
     4ee:	69 c0       	rjmp	.+210    	; 0x5c2 <EXT_INTx_setEdgeType+0xd8>
     4f0:	85 30       	cpi	r24, 0x05	; 5
     4f2:	08 f0       	brcs	.+2      	; 0x4f6 <EXT_INTx_setEdgeType+0xc>
     4f4:	68 c0       	rjmp	.+208    	; 0x5c6 <EXT_INTx_setEdgeType+0xdc>
     4f6:	61 30       	cpi	r22, 0x01	; 1
     4f8:	69 f1       	breq	.+90     	; 0x554 <EXT_INTx_setEdgeType+0x6a>
     4fa:	20 f0       	brcs	.+8      	; 0x504 <EXT_INTx_setEdgeType+0x1a>
     4fc:	62 30       	cpi	r22, 0x02	; 2
     4fe:	09 f4       	brne	.+2      	; 0x502 <EXT_INTx_setEdgeType+0x18>
     500:	51 c0       	rjmp	.+162    	; 0x5a4 <EXT_INTx_setEdgeType+0xba>
     502:	63 c0       	rjmp	.+198    	; 0x5ca <EXT_INTx_setEdgeType+0xe0>
     504:	81 30       	cpi	r24, 0x01	; 1
     506:	71 f0       	breq	.+28     	; 0x524 <EXT_INTx_setEdgeType+0x3a>
     508:	28 f0       	brcs	.+10     	; 0x514 <EXT_INTx_setEdgeType+0x2a>
     50a:	82 30       	cpi	r24, 0x02	; 2
     50c:	99 f0       	breq	.+38     	; 0x534 <EXT_INTx_setEdgeType+0x4a>
     50e:	83 30       	cpi	r24, 0x03	; 3
     510:	c9 f0       	breq	.+50     	; 0x544 <EXT_INTx_setEdgeType+0x5a>
     512:	5d c0       	rjmp	.+186    	; 0x5ce <EXT_INTx_setEdgeType+0xe4>
     514:	85 b7       	in	r24, 0x35	; 53
     516:	8e 7f       	andi	r24, 0xFE	; 254
     518:	85 bf       	out	0x35, r24	; 53
     51a:	85 b7       	in	r24, 0x35	; 53
     51c:	8d 7f       	andi	r24, 0xFD	; 253
     51e:	85 bf       	out	0x35, r24	; 53
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	08 95       	ret
     524:	85 b7       	in	r24, 0x35	; 53
     526:	81 60       	ori	r24, 0x01	; 1
     528:	85 bf       	out	0x35, r24	; 53
     52a:	85 b7       	in	r24, 0x35	; 53
     52c:	8d 7f       	andi	r24, 0xFD	; 253
     52e:	85 bf       	out	0x35, r24	; 53
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	08 95       	ret
     534:	85 b7       	in	r24, 0x35	; 53
     536:	8e 7f       	andi	r24, 0xFE	; 254
     538:	85 bf       	out	0x35, r24	; 53
     53a:	85 b7       	in	r24, 0x35	; 53
     53c:	82 60       	ori	r24, 0x02	; 2
     53e:	85 bf       	out	0x35, r24	; 53
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	08 95       	ret
     544:	85 b7       	in	r24, 0x35	; 53
     546:	81 60       	ori	r24, 0x01	; 1
     548:	85 bf       	out	0x35, r24	; 53
     54a:	85 b7       	in	r24, 0x35	; 53
     54c:	82 60       	ori	r24, 0x02	; 2
     54e:	85 bf       	out	0x35, r24	; 53
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	08 95       	ret
     554:	81 30       	cpi	r24, 0x01	; 1
     556:	71 f0       	breq	.+28     	; 0x574 <EXT_INTx_setEdgeType+0x8a>
     558:	28 f0       	brcs	.+10     	; 0x564 <EXT_INTx_setEdgeType+0x7a>
     55a:	82 30       	cpi	r24, 0x02	; 2
     55c:	99 f0       	breq	.+38     	; 0x584 <EXT_INTx_setEdgeType+0x9a>
     55e:	83 30       	cpi	r24, 0x03	; 3
     560:	c9 f0       	breq	.+50     	; 0x594 <EXT_INTx_setEdgeType+0xaa>
     562:	37 c0       	rjmp	.+110    	; 0x5d2 <EXT_INTx_setEdgeType+0xe8>
     564:	85 b7       	in	r24, 0x35	; 53
     566:	8b 7f       	andi	r24, 0xFB	; 251
     568:	85 bf       	out	0x35, r24	; 53
     56a:	85 b7       	in	r24, 0x35	; 53
     56c:	87 7f       	andi	r24, 0xF7	; 247
     56e:	85 bf       	out	0x35, r24	; 53
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	08 95       	ret
     574:	85 b7       	in	r24, 0x35	; 53
     576:	84 60       	ori	r24, 0x04	; 4
     578:	85 bf       	out	0x35, r24	; 53
     57a:	85 b7       	in	r24, 0x35	; 53
     57c:	87 7f       	andi	r24, 0xF7	; 247
     57e:	85 bf       	out	0x35, r24	; 53
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	08 95       	ret
     584:	85 b7       	in	r24, 0x35	; 53
     586:	8b 7f       	andi	r24, 0xFB	; 251
     588:	85 bf       	out	0x35, r24	; 53
     58a:	85 b7       	in	r24, 0x35	; 53
     58c:	88 60       	ori	r24, 0x08	; 8
     58e:	85 bf       	out	0x35, r24	; 53
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	08 95       	ret
     594:	85 b7       	in	r24, 0x35	; 53
     596:	84 60       	ori	r24, 0x04	; 4
     598:	85 bf       	out	0x35, r24	; 53
     59a:	85 b7       	in	r24, 0x35	; 53
     59c:	88 60       	ori	r24, 0x08	; 8
     59e:	85 bf       	out	0x35, r24	; 53
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	08 95       	ret
     5a4:	82 30       	cpi	r24, 0x02	; 2
     5a6:	19 f0       	breq	.+6      	; 0x5ae <EXT_INTx_setEdgeType+0xc4>
     5a8:	83 30       	cpi	r24, 0x03	; 3
     5aa:	31 f0       	breq	.+12     	; 0x5b8 <EXT_INTx_setEdgeType+0xce>
     5ac:	14 c0       	rjmp	.+40     	; 0x5d6 <EXT_INTx_setEdgeType+0xec>
     5ae:	84 b7       	in	r24, 0x34	; 52
     5b0:	8f 7b       	andi	r24, 0xBF	; 191
     5b2:	84 bf       	out	0x34, r24	; 52
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	08 95       	ret
     5b8:	84 b7       	in	r24, 0x34	; 52
     5ba:	80 64       	ori	r24, 0x40	; 64
     5bc:	84 bf       	out	0x34, r24	; 52
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	08 95       	ret
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	08 95       	ret
     5c6:	80 e0       	ldi	r24, 0x00	; 0
     5c8:	08 95       	ret
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	08 95       	ret
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	08 95       	ret
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	08 95       	ret
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	08 95       	ret

000005da <EXT_INTx_Init>:
     5da:	1f 93       	push	r17
     5dc:	cf 93       	push	r28
     5de:	df 93       	push	r29
     5e0:	00 d0       	rcall	.+0      	; 0x5e2 <EXT_INTx_Init+0x8>
     5e2:	cd b7       	in	r28, 0x3d	; 61
     5e4:	de b7       	in	r29, 0x3e	; 62
     5e6:	00 97       	sbiw	r24, 0x00	; 0
     5e8:	09 f4       	brne	.+2      	; 0x5ec <EXT_INTx_Init+0x12>
     5ea:	57 c0       	rjmp	.+174    	; 0x69a <EXT_INTx_Init+0xc0>
     5ec:	fc 01       	movw	r30, r24
     5ee:	21 81       	ldd	r18, Z+1	; 0x01
     5f0:	23 30       	cpi	r18, 0x03	; 3
     5f2:	08 f0       	brcs	.+2      	; 0x5f6 <EXT_INTx_Init+0x1c>
     5f4:	54 c0       	rjmp	.+168    	; 0x69e <EXT_INTx_Init+0xc4>
     5f6:	21 30       	cpi	r18, 0x01	; 1
     5f8:	e9 f0       	breq	.+58     	; 0x634 <EXT_INTx_Init+0x5a>
     5fa:	18 f0       	brcs	.+6      	; 0x602 <EXT_INTx_Init+0x28>
     5fc:	22 30       	cpi	r18, 0x02	; 2
     5fe:	91 f1       	breq	.+100    	; 0x664 <EXT_INTx_Init+0x8a>
     600:	4a c0       	rjmp	.+148    	; 0x696 <EXT_INTx_Init+0xbc>
     602:	2b b7       	in	r18, 0x3b	; 59
     604:	2f 7b       	andi	r18, 0xBF	; 191
     606:	2b bf       	out	0x3b, r18	; 59
     608:	2a b7       	in	r18, 0x3a	; 58
     60a:	20 64       	ori	r18, 0x40	; 64
     60c:	2a bf       	out	0x3a, r18	; 58
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	80 81       	ld	r24, Z
     612:	0e 94 75 02 	call	0x4ea	; 0x4ea <EXT_INTx_setEdgeType>
     616:	18 2f       	mov	r17, r24
     618:	83 e0       	ldi	r24, 0x03	; 3
     61a:	89 83       	std	Y+1, r24	; 0x01
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	8a 83       	std	Y+2, r24	; 0x02
     620:	60 e0       	ldi	r22, 0x00	; 0
     622:	ce 01       	movw	r24, r28
     624:	01 96       	adiw	r24, 0x01	; 1
     626:	0e 94 29 01 	call	0x252	; 0x252 <DIO_pin_direction_intialize>
     62a:	81 2b       	or	r24, r17
     62c:	9b b7       	in	r25, 0x3b	; 59
     62e:	90 64       	ori	r25, 0x40	; 64
     630:	9b bf       	out	0x3b, r25	; 59
     632:	36 c0       	rjmp	.+108    	; 0x6a0 <EXT_INTx_Init+0xc6>
     634:	2b b7       	in	r18, 0x3b	; 59
     636:	2f 77       	andi	r18, 0x7F	; 127
     638:	2b bf       	out	0x3b, r18	; 59
     63a:	2a b7       	in	r18, 0x3a	; 58
     63c:	20 68       	ori	r18, 0x80	; 128
     63e:	2a bf       	out	0x3a, r18	; 58
     640:	61 e0       	ldi	r22, 0x01	; 1
     642:	80 81       	ld	r24, Z
     644:	0e 94 75 02 	call	0x4ea	; 0x4ea <EXT_INTx_setEdgeType>
     648:	18 2f       	mov	r17, r24
     64a:	83 e0       	ldi	r24, 0x03	; 3
     64c:	89 83       	std	Y+1, r24	; 0x01
     64e:	8a 83       	std	Y+2, r24	; 0x02
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	ce 01       	movw	r24, r28
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	0e 94 29 01 	call	0x252	; 0x252 <DIO_pin_direction_intialize>
     65a:	81 2b       	or	r24, r17
     65c:	9b b7       	in	r25, 0x3b	; 59
     65e:	90 68       	ori	r25, 0x80	; 128
     660:	9b bf       	out	0x3b, r25	; 59
     662:	1e c0       	rjmp	.+60     	; 0x6a0 <EXT_INTx_Init+0xc6>
     664:	2b b7       	in	r18, 0x3b	; 59
     666:	2f 7d       	andi	r18, 0xDF	; 223
     668:	2b bf       	out	0x3b, r18	; 59
     66a:	2a b7       	in	r18, 0x3a	; 58
     66c:	20 62       	ori	r18, 0x20	; 32
     66e:	2a bf       	out	0x3a, r18	; 58
     670:	62 e0       	ldi	r22, 0x02	; 2
     672:	80 81       	ld	r24, Z
     674:	0e 94 75 02 	call	0x4ea	; 0x4ea <EXT_INTx_setEdgeType>
     678:	18 2f       	mov	r17, r24
     67a:	88 b3       	in	r24, 0x18	; 24
     67c:	89 83       	std	Y+1, r24	; 0x01
     67e:	82 e0       	ldi	r24, 0x02	; 2
     680:	8a 83       	std	Y+2, r24	; 0x02
     682:	60 e0       	ldi	r22, 0x00	; 0
     684:	ce 01       	movw	r24, r28
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	0e 94 29 01 	call	0x252	; 0x252 <DIO_pin_direction_intialize>
     68c:	81 2b       	or	r24, r17
     68e:	9b b7       	in	r25, 0x3b	; 59
     690:	90 68       	ori	r25, 0x80	; 128
     692:	9b bf       	out	0x3b, r25	; 59
     694:	05 c0       	rjmp	.+10     	; 0x6a0 <EXT_INTx_Init+0xc6>
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	03 c0       	rjmp	.+6      	; 0x6a0 <EXT_INTx_Init+0xc6>
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	01 c0       	rjmp	.+2      	; 0x6a0 <EXT_INTx_Init+0xc6>
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	0f 90       	pop	r0
     6a2:	0f 90       	pop	r0
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	1f 91       	pop	r17
     6aa:	08 95       	ret

000006ac <__vector_11>:
     6ac:	1f 92       	push	r1
     6ae:	0f 92       	push	r0
     6b0:	0f b6       	in	r0, 0x3f	; 63
     6b2:	0f 92       	push	r0
     6b4:	11 24       	eor	r1, r1
     6b6:	2f 93       	push	r18
     6b8:	3f 93       	push	r19
     6ba:	4f 93       	push	r20
     6bc:	5f 93       	push	r21
     6be:	6f 93       	push	r22
     6c0:	7f 93       	push	r23
     6c2:	8f 93       	push	r24
     6c4:	9f 93       	push	r25
     6c6:	af 93       	push	r26
     6c8:	bf 93       	push	r27
     6ca:	ef 93       	push	r30
     6cc:	ff 93       	push	r31
     6ce:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <sg_Timer0_callBackPtr>
     6d2:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <sg_Timer0_callBackPtr+0x1>
     6d6:	89 2b       	or	r24, r25
     6d8:	41 f0       	breq	.+16     	; 0x6ea <__vector_11+0x3e>
     6da:	88 b7       	in	r24, 0x38	; 56
     6dc:	8e 7f       	andi	r24, 0xFE	; 254
     6de:	88 bf       	out	0x38, r24	; 56
     6e0:	e0 91 9f 00 	lds	r30, 0x009F	; 0x80009f <sg_Timer0_callBackPtr>
     6e4:	f0 91 a0 00 	lds	r31, 0x00A0	; 0x8000a0 <sg_Timer0_callBackPtr+0x1>
     6e8:	09 95       	icall
     6ea:	ff 91       	pop	r31
     6ec:	ef 91       	pop	r30
     6ee:	bf 91       	pop	r27
     6f0:	af 91       	pop	r26
     6f2:	9f 91       	pop	r25
     6f4:	8f 91       	pop	r24
     6f6:	7f 91       	pop	r23
     6f8:	6f 91       	pop	r22
     6fa:	5f 91       	pop	r21
     6fc:	4f 91       	pop	r20
     6fe:	3f 91       	pop	r19
     700:	2f 91       	pop	r18
     702:	0f 90       	pop	r0
     704:	0f be       	out	0x3f, r0	; 63
     706:	0f 90       	pop	r0
     708:	1f 90       	pop	r1
     70a:	18 95       	reti

0000070c <__vector_9>:
     70c:	1f 92       	push	r1
     70e:	0f 92       	push	r0
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	0f 92       	push	r0
     714:	11 24       	eor	r1, r1
     716:	2f 93       	push	r18
     718:	3f 93       	push	r19
     71a:	4f 93       	push	r20
     71c:	5f 93       	push	r21
     71e:	6f 93       	push	r22
     720:	7f 93       	push	r23
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	af 93       	push	r26
     728:	bf 93       	push	r27
     72a:	ef 93       	push	r30
     72c:	ff 93       	push	r31
     72e:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <sg_Timer1_callBackPtr>
     732:	90 91 9e 00 	lds	r25, 0x009E	; 0x80009e <sg_Timer1_callBackPtr+0x1>
     736:	89 2b       	or	r24, r25
     738:	41 f0       	breq	.+16     	; 0x74a <__vector_9+0x3e>
     73a:	88 b7       	in	r24, 0x38	; 56
     73c:	8b 7f       	andi	r24, 0xFB	; 251
     73e:	88 bf       	out	0x38, r24	; 56
     740:	e0 91 9d 00 	lds	r30, 0x009D	; 0x80009d <sg_Timer1_callBackPtr>
     744:	f0 91 9e 00 	lds	r31, 0x009E	; 0x80009e <sg_Timer1_callBackPtr+0x1>
     748:	09 95       	icall
     74a:	ff 91       	pop	r31
     74c:	ef 91       	pop	r30
     74e:	bf 91       	pop	r27
     750:	af 91       	pop	r26
     752:	9f 91       	pop	r25
     754:	8f 91       	pop	r24
     756:	7f 91       	pop	r23
     758:	6f 91       	pop	r22
     75a:	5f 91       	pop	r21
     75c:	4f 91       	pop	r20
     75e:	3f 91       	pop	r19
     760:	2f 91       	pop	r18
     762:	0f 90       	pop	r0
     764:	0f be       	out	0x3f, r0	; 63
     766:	0f 90       	pop	r0
     768:	1f 90       	pop	r1
     76a:	18 95       	reti

0000076c <__vector_5>:
     76c:	1f 92       	push	r1
     76e:	0f 92       	push	r0
     770:	0f b6       	in	r0, 0x3f	; 63
     772:	0f 92       	push	r0
     774:	11 24       	eor	r1, r1
     776:	2f 93       	push	r18
     778:	3f 93       	push	r19
     77a:	4f 93       	push	r20
     77c:	5f 93       	push	r21
     77e:	6f 93       	push	r22
     780:	7f 93       	push	r23
     782:	8f 93       	push	r24
     784:	9f 93       	push	r25
     786:	af 93       	push	r26
     788:	bf 93       	push	r27
     78a:	ef 93       	push	r30
     78c:	ff 93       	push	r31
     78e:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <sg_Timer2_callBackPtr>
     792:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <sg_Timer2_callBackPtr+0x1>
     796:	89 2b       	or	r24, r25
     798:	41 f0       	breq	.+16     	; 0x7aa <__vector_5+0x3e>
     79a:	88 b7       	in	r24, 0x38	; 56
     79c:	8f 7b       	andi	r24, 0xBF	; 191
     79e:	88 bf       	out	0x38, r24	; 56
     7a0:	e0 91 9b 00 	lds	r30, 0x009B	; 0x80009b <sg_Timer2_callBackPtr>
     7a4:	f0 91 9c 00 	lds	r31, 0x009C	; 0x80009c <sg_Timer2_callBackPtr+0x1>
     7a8:	09 95       	icall
     7aa:	ff 91       	pop	r31
     7ac:	ef 91       	pop	r30
     7ae:	bf 91       	pop	r27
     7b0:	af 91       	pop	r26
     7b2:	9f 91       	pop	r25
     7b4:	8f 91       	pop	r24
     7b6:	7f 91       	pop	r23
     7b8:	6f 91       	pop	r22
     7ba:	5f 91       	pop	r21
     7bc:	4f 91       	pop	r20
     7be:	3f 91       	pop	r19
     7c0:	2f 91       	pop	r18
     7c2:	0f 90       	pop	r0
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	0f 90       	pop	r0
     7c8:	1f 90       	pop	r1
     7ca:	18 95       	reti

000007cc <TIMER_init>:
     7cc:	00 97       	sbiw	r24, 0x00	; 0
     7ce:	09 f4       	brne	.+2      	; 0x7d2 <TIMER_init+0x6>
     7d0:	7c c0       	rjmp	.+248    	; 0x8ca <__stack+0x6b>
     7d2:	fc 01       	movw	r30, r24
     7d4:	20 81       	ld	r18, Z
     7d6:	23 30       	cpi	r18, 0x03	; 3
     7d8:	08 f0       	brcs	.+2      	; 0x7dc <TIMER_init+0x10>
     7da:	79 c0       	rjmp	.+242    	; 0x8ce <__stack+0x6f>
     7dc:	31 81       	ldd	r19, Z+1	; 0x01
     7de:	3a 30       	cpi	r19, 0x0A	; 10
     7e0:	08 f0       	brcs	.+2      	; 0x7e4 <TIMER_init+0x18>
     7e2:	77 c0       	rjmp	.+238    	; 0x8d2 <__stack+0x73>
     7e4:	21 30       	cpi	r18, 0x01	; 1
     7e6:	19 f1       	breq	.+70     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     7e8:	20 f0       	brcs	.+8      	; 0x7f2 <TIMER_init+0x26>
     7ea:	22 30       	cpi	r18, 0x02	; 2
     7ec:	09 f4       	brne	.+2      	; 0x7f0 <TIMER_init+0x24>
     7ee:	50 c0       	rjmp	.+160    	; 0x890 <__stack+0x31>
     7f0:	72 c0       	rjmp	.+228    	; 0x8d6 <__stack+0x77>
     7f2:	12 be       	out	0x32, r1	; 50
     7f4:	13 be       	out	0x33, r1	; 51
     7f6:	1c be       	out	0x3c, r1	; 60
     7f8:	fc 01       	movw	r30, r24
     7fa:	22 81       	ldd	r18, Z+2	; 0x02
     7fc:	22 bf       	out	0x32, r18	; 50
     7fe:	23 b7       	in	r18, 0x33	; 51
     800:	20 68       	ori	r18, 0x80	; 128
     802:	23 bf       	out	0x33, r18	; 51
     804:	23 b7       	in	r18, 0x33	; 51
     806:	2f 7b       	andi	r18, 0xBF	; 191
     808:	23 bf       	out	0x33, r18	; 51
     80a:	23 b7       	in	r18, 0x33	; 51
     80c:	27 7f       	andi	r18, 0xF7	; 247
     80e:	23 bf       	out	0x33, r18	; 51
     810:	23 b7       	in	r18, 0x33	; 51
     812:	2f 7e       	andi	r18, 0xEF	; 239
     814:	23 bf       	out	0x33, r18	; 51
     816:	23 b7       	in	r18, 0x33	; 51
     818:	2f 7d       	andi	r18, 0xDF	; 223
     81a:	23 bf       	out	0x33, r18	; 51
     81c:	84 81       	ldd	r24, Z+4	; 0x04
     81e:	81 30       	cpi	r24, 0x01	; 1
     820:	09 f0       	breq	.+2      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     822:	5b c0       	rjmp	.+182    	; 0x8da <__stack+0x7b>
     824:	89 b7       	in	r24, 0x39	; 57
     826:	81 60       	ori	r24, 0x01	; 1
     828:	89 bf       	out	0x39, r24	; 57
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	08 95       	ret
     82e:	1c bc       	out	0x2c, r1	; 44
     830:	1d bc       	out	0x2d, r1	; 45
     832:	1f bc       	out	0x2f, r1	; 47
     834:	1e bc       	out	0x2e, r1	; 46
     836:	1b bc       	out	0x2b, r1	; 43
     838:	1a bc       	out	0x2a, r1	; 42
     83a:	fc 01       	movw	r30, r24
     83c:	22 81       	ldd	r18, Z+2	; 0x02
     83e:	33 81       	ldd	r19, Z+3	; 0x03
     840:	3d bd       	out	0x2d, r19	; 45
     842:	2c bd       	out	0x2c, r18	; 44
     844:	2f b5       	in	r18, 0x2f	; 47
     846:	28 60       	ori	r18, 0x08	; 8
     848:	2f bd       	out	0x2f, r18	; 47
     84a:	2f b5       	in	r18, 0x2f	; 47
     84c:	24 60       	ori	r18, 0x04	; 4
     84e:	2f bd       	out	0x2f, r18	; 47
     850:	2f b5       	in	r18, 0x2f	; 47
     852:	2e 7f       	andi	r18, 0xFE	; 254
     854:	2f bd       	out	0x2f, r18	; 47
     856:	2f b5       	in	r18, 0x2f	; 47
     858:	2d 7f       	andi	r18, 0xFD	; 253
     85a:	2f bd       	out	0x2f, r18	; 47
     85c:	2e b5       	in	r18, 0x2e	; 46
     85e:	2f 7e       	andi	r18, 0xEF	; 239
     860:	2e bd       	out	0x2e, r18	; 46
     862:	2e b5       	in	r18, 0x2e	; 46
     864:	27 7f       	andi	r18, 0xF7	; 247
     866:	2e bd       	out	0x2e, r18	; 46
     868:	2f b5       	in	r18, 0x2f	; 47
     86a:	2f 7b       	andi	r18, 0xBF	; 191
     86c:	2f bd       	out	0x2f, r18	; 47
     86e:	2f b5       	in	r18, 0x2f	; 47
     870:	2f 77       	andi	r18, 0x7F	; 127
     872:	2f bd       	out	0x2f, r18	; 47
     874:	2f b5       	in	r18, 0x2f	; 47
     876:	2f 7e       	andi	r18, 0xEF	; 239
     878:	2f bd       	out	0x2f, r18	; 47
     87a:	2f b5       	in	r18, 0x2f	; 47
     87c:	2f 7d       	andi	r18, 0xDF	; 223
     87e:	2f bd       	out	0x2f, r18	; 47
     880:	84 81       	ldd	r24, Z+4	; 0x04
     882:	81 30       	cpi	r24, 0x01	; 1
     884:	61 f5       	brne	.+88     	; 0x8de <__stack+0x7f>
     886:	89 b7       	in	r24, 0x39	; 57
     888:	84 60       	ori	r24, 0x04	; 4
     88a:	89 bf       	out	0x39, r24	; 57
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	08 95       	ret
     890:	14 bc       	out	0x24, r1	; 36
     892:	15 bc       	out	0x25, r1	; 37
     894:	13 bc       	out	0x23, r1	; 35
     896:	fc 01       	movw	r30, r24
     898:	22 81       	ldd	r18, Z+2	; 0x02
     89a:	24 bd       	out	0x24, r18	; 36
     89c:	25 b5       	in	r18, 0x25	; 37
     89e:	20 68       	ori	r18, 0x80	; 128
     8a0:	25 bd       	out	0x25, r18	; 37
     8a2:	25 b5       	in	r18, 0x25	; 37
     8a4:	2f 7b       	andi	r18, 0xBF	; 191
     8a6:	25 bd       	out	0x25, r18	; 37
     8a8:	25 b5       	in	r18, 0x25	; 37
     8aa:	27 7f       	andi	r18, 0xF7	; 247
     8ac:	25 bd       	out	0x25, r18	; 37
     8ae:	25 b5       	in	r18, 0x25	; 37
     8b0:	2f 7e       	andi	r18, 0xEF	; 239
     8b2:	25 bd       	out	0x25, r18	; 37
     8b4:	25 b5       	in	r18, 0x25	; 37
     8b6:	2f 7d       	andi	r18, 0xDF	; 223
     8b8:	25 bd       	out	0x25, r18	; 37
     8ba:	84 81       	ldd	r24, Z+4	; 0x04
     8bc:	81 30       	cpi	r24, 0x01	; 1
     8be:	89 f4       	brne	.+34     	; 0x8e2 <__stack+0x83>
     8c0:	89 b7       	in	r24, 0x39	; 57
     8c2:	80 64       	ori	r24, 0x40	; 64
     8c4:	89 bf       	out	0x39, r24	; 57
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	08 95       	ret
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	08 95       	ret
     8ce:	83 e0       	ldi	r24, 0x03	; 3
     8d0:	08 95       	ret
     8d2:	83 e0       	ldi	r24, 0x03	; 3
     8d4:	08 95       	ret
     8d6:	83 e0       	ldi	r24, 0x03	; 3
     8d8:	08 95       	ret
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	08 95       	ret
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	08 95       	ret
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	08 95       	ret

000008e6 <TIMER_start>:
     8e6:	00 97       	sbiw	r24, 0x00	; 0
     8e8:	09 f4       	brne	.+2      	; 0x8ec <TIMER_start+0x6>
     8ea:	3b c1       	rjmp	.+630    	; 0xb62 <TIMER_start+0x27c>
     8ec:	dc 01       	movw	r26, r24
     8ee:	2c 91       	ld	r18, X
     8f0:	23 30       	cpi	r18, 0x03	; 3
     8f2:	08 f0       	brcs	.+2      	; 0x8f6 <TIMER_start+0x10>
     8f4:	38 c1       	rjmp	.+624    	; 0xb66 <TIMER_start+0x280>
     8f6:	11 96       	adiw	r26, 0x01	; 1
     8f8:	ec 91       	ld	r30, X
     8fa:	ea 30       	cpi	r30, 0x0A	; 10
     8fc:	08 f0       	brcs	.+2      	; 0x900 <TIMER_start+0x1a>
     8fe:	35 c1       	rjmp	.+618    	; 0xb6a <TIMER_start+0x284>
     900:	21 30       	cpi	r18, 0x01	; 1
     902:	09 f4       	brne	.+2      	; 0x906 <TIMER_start+0x20>
     904:	68 c0       	rjmp	.+208    	; 0x9d6 <TIMER_start+0xf0>
     906:	20 f0       	brcs	.+8      	; 0x910 <TIMER_start+0x2a>
     908:	22 30       	cpi	r18, 0x02	; 2
     90a:	09 f4       	brne	.+2      	; 0x90e <TIMER_start+0x28>
     90c:	c7 c0       	rjmp	.+398    	; 0xa9c <TIMER_start+0x1b6>
     90e:	2f c1       	rjmp	.+606    	; 0xb6e <TIMER_start+0x288>
     910:	8e 2f       	mov	r24, r30
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	8a 30       	cpi	r24, 0x0A	; 10
     916:	91 05       	cpc	r25, r1
     918:	08 f0       	brcs	.+2      	; 0x91c <TIMER_start+0x36>
     91a:	2b c1       	rjmp	.+598    	; 0xb72 <TIMER_start+0x28c>
     91c:	fc 01       	movw	r30, r24
     91e:	e6 5d       	subi	r30, 0xD6	; 214
     920:	ff 4f       	sbci	r31, 0xFF	; 255
     922:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__tablejump2__>
     926:	83 b7       	in	r24, 0x33	; 51
     928:	8e 7f       	andi	r24, 0xFE	; 254
     92a:	83 bf       	out	0x33, r24	; 51
     92c:	83 b7       	in	r24, 0x33	; 51
     92e:	8d 7f       	andi	r24, 0xFD	; 253
     930:	83 bf       	out	0x33, r24	; 51
     932:	83 b7       	in	r24, 0x33	; 51
     934:	8b 7f       	andi	r24, 0xFB	; 251
     936:	83 bf       	out	0x33, r24	; 51
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	08 95       	ret
     93c:	83 b7       	in	r24, 0x33	; 51
     93e:	81 60       	ori	r24, 0x01	; 1
     940:	83 bf       	out	0x33, r24	; 51
     942:	83 b7       	in	r24, 0x33	; 51
     944:	8d 7f       	andi	r24, 0xFD	; 253
     946:	83 bf       	out	0x33, r24	; 51
     948:	83 b7       	in	r24, 0x33	; 51
     94a:	8b 7f       	andi	r24, 0xFB	; 251
     94c:	83 bf       	out	0x33, r24	; 51
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	08 95       	ret
     952:	83 b7       	in	r24, 0x33	; 51
     954:	8e 7f       	andi	r24, 0xFE	; 254
     956:	83 bf       	out	0x33, r24	; 51
     958:	83 b7       	in	r24, 0x33	; 51
     95a:	82 60       	ori	r24, 0x02	; 2
     95c:	83 bf       	out	0x33, r24	; 51
     95e:	83 b7       	in	r24, 0x33	; 51
     960:	8b 7f       	andi	r24, 0xFB	; 251
     962:	83 bf       	out	0x33, r24	; 51
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	08 95       	ret
     968:	83 b7       	in	r24, 0x33	; 51
     96a:	81 60       	ori	r24, 0x01	; 1
     96c:	83 bf       	out	0x33, r24	; 51
     96e:	83 b7       	in	r24, 0x33	; 51
     970:	82 60       	ori	r24, 0x02	; 2
     972:	83 bf       	out	0x33, r24	; 51
     974:	83 b7       	in	r24, 0x33	; 51
     976:	8b 7f       	andi	r24, 0xFB	; 251
     978:	83 bf       	out	0x33, r24	; 51
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	08 95       	ret
     97e:	83 b7       	in	r24, 0x33	; 51
     980:	8e 7f       	andi	r24, 0xFE	; 254
     982:	83 bf       	out	0x33, r24	; 51
     984:	83 b7       	in	r24, 0x33	; 51
     986:	8d 7f       	andi	r24, 0xFD	; 253
     988:	83 bf       	out	0x33, r24	; 51
     98a:	83 b7       	in	r24, 0x33	; 51
     98c:	84 60       	ori	r24, 0x04	; 4
     98e:	83 bf       	out	0x33, r24	; 51
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	08 95       	ret
     994:	83 b7       	in	r24, 0x33	; 51
     996:	81 60       	ori	r24, 0x01	; 1
     998:	83 bf       	out	0x33, r24	; 51
     99a:	83 b7       	in	r24, 0x33	; 51
     99c:	8d 7f       	andi	r24, 0xFD	; 253
     99e:	83 bf       	out	0x33, r24	; 51
     9a0:	83 b7       	in	r24, 0x33	; 51
     9a2:	84 60       	ori	r24, 0x04	; 4
     9a4:	83 bf       	out	0x33, r24	; 51
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	08 95       	ret
     9aa:	83 b7       	in	r24, 0x33	; 51
     9ac:	8e 7f       	andi	r24, 0xFE	; 254
     9ae:	83 bf       	out	0x33, r24	; 51
     9b0:	83 b7       	in	r24, 0x33	; 51
     9b2:	82 60       	ori	r24, 0x02	; 2
     9b4:	83 bf       	out	0x33, r24	; 51
     9b6:	83 b7       	in	r24, 0x33	; 51
     9b8:	84 60       	ori	r24, 0x04	; 4
     9ba:	83 bf       	out	0x33, r24	; 51
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	08 95       	ret
     9c0:	83 b7       	in	r24, 0x33	; 51
     9c2:	81 60       	ori	r24, 0x01	; 1
     9c4:	83 bf       	out	0x33, r24	; 51
     9c6:	83 b7       	in	r24, 0x33	; 51
     9c8:	82 60       	ori	r24, 0x02	; 2
     9ca:	83 bf       	out	0x33, r24	; 51
     9cc:	83 b7       	in	r24, 0x33	; 51
     9ce:	84 60       	ori	r24, 0x04	; 4
     9d0:	83 bf       	out	0x33, r24	; 51
     9d2:	80 e0       	ldi	r24, 0x00	; 0
     9d4:	08 95       	ret
     9d6:	8e 2f       	mov	r24, r30
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	8a 30       	cpi	r24, 0x0A	; 10
     9dc:	91 05       	cpc	r25, r1
     9de:	08 f0       	brcs	.+2      	; 0x9e2 <TIMER_start+0xfc>
     9e0:	ca c0       	rjmp	.+404    	; 0xb76 <TIMER_start+0x290>
     9e2:	fc 01       	movw	r30, r24
     9e4:	ec 5c       	subi	r30, 0xCC	; 204
     9e6:	ff 4f       	sbci	r31, 0xFF	; 255
     9e8:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__tablejump2__>
     9ec:	8e b5       	in	r24, 0x2e	; 46
     9ee:	8e 7f       	andi	r24, 0xFE	; 254
     9f0:	8e bd       	out	0x2e, r24	; 46
     9f2:	8e b5       	in	r24, 0x2e	; 46
     9f4:	8d 7f       	andi	r24, 0xFD	; 253
     9f6:	8e bd       	out	0x2e, r24	; 46
     9f8:	8e b5       	in	r24, 0x2e	; 46
     9fa:	8b 7f       	andi	r24, 0xFB	; 251
     9fc:	8e bd       	out	0x2e, r24	; 46
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	08 95       	ret
     a02:	8e b5       	in	r24, 0x2e	; 46
     a04:	81 60       	ori	r24, 0x01	; 1
     a06:	8e bd       	out	0x2e, r24	; 46
     a08:	8e b5       	in	r24, 0x2e	; 46
     a0a:	8d 7f       	andi	r24, 0xFD	; 253
     a0c:	8e bd       	out	0x2e, r24	; 46
     a0e:	8e b5       	in	r24, 0x2e	; 46
     a10:	8b 7f       	andi	r24, 0xFB	; 251
     a12:	8e bd       	out	0x2e, r24	; 46
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	08 95       	ret
     a18:	8e b5       	in	r24, 0x2e	; 46
     a1a:	8e 7f       	andi	r24, 0xFE	; 254
     a1c:	8e bd       	out	0x2e, r24	; 46
     a1e:	8e b5       	in	r24, 0x2e	; 46
     a20:	82 60       	ori	r24, 0x02	; 2
     a22:	8e bd       	out	0x2e, r24	; 46
     a24:	8e b5       	in	r24, 0x2e	; 46
     a26:	8b 7f       	andi	r24, 0xFB	; 251
     a28:	8e bd       	out	0x2e, r24	; 46
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	08 95       	ret
     a2e:	8e b5       	in	r24, 0x2e	; 46
     a30:	81 60       	ori	r24, 0x01	; 1
     a32:	8e bd       	out	0x2e, r24	; 46
     a34:	8e b5       	in	r24, 0x2e	; 46
     a36:	82 60       	ori	r24, 0x02	; 2
     a38:	8e bd       	out	0x2e, r24	; 46
     a3a:	8e b5       	in	r24, 0x2e	; 46
     a3c:	8b 7f       	andi	r24, 0xFB	; 251
     a3e:	8e bd       	out	0x2e, r24	; 46
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	08 95       	ret
     a44:	8e b5       	in	r24, 0x2e	; 46
     a46:	8e 7f       	andi	r24, 0xFE	; 254
     a48:	8e bd       	out	0x2e, r24	; 46
     a4a:	8e b5       	in	r24, 0x2e	; 46
     a4c:	8d 7f       	andi	r24, 0xFD	; 253
     a4e:	8e bd       	out	0x2e, r24	; 46
     a50:	8e b5       	in	r24, 0x2e	; 46
     a52:	84 60       	ori	r24, 0x04	; 4
     a54:	8e bd       	out	0x2e, r24	; 46
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	08 95       	ret
     a5a:	8e b5       	in	r24, 0x2e	; 46
     a5c:	81 60       	ori	r24, 0x01	; 1
     a5e:	8e bd       	out	0x2e, r24	; 46
     a60:	8e b5       	in	r24, 0x2e	; 46
     a62:	8d 7f       	andi	r24, 0xFD	; 253
     a64:	8e bd       	out	0x2e, r24	; 46
     a66:	8e b5       	in	r24, 0x2e	; 46
     a68:	84 60       	ori	r24, 0x04	; 4
     a6a:	8e bd       	out	0x2e, r24	; 46
     a6c:	80 e0       	ldi	r24, 0x00	; 0
     a6e:	08 95       	ret
     a70:	8e b5       	in	r24, 0x2e	; 46
     a72:	8e 7f       	andi	r24, 0xFE	; 254
     a74:	8e bd       	out	0x2e, r24	; 46
     a76:	8e b5       	in	r24, 0x2e	; 46
     a78:	82 60       	ori	r24, 0x02	; 2
     a7a:	8e bd       	out	0x2e, r24	; 46
     a7c:	8e b5       	in	r24, 0x2e	; 46
     a7e:	84 60       	ori	r24, 0x04	; 4
     a80:	8e bd       	out	0x2e, r24	; 46
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	08 95       	ret
     a86:	8e b5       	in	r24, 0x2e	; 46
     a88:	81 60       	ori	r24, 0x01	; 1
     a8a:	8e bd       	out	0x2e, r24	; 46
     a8c:	8e b5       	in	r24, 0x2e	; 46
     a8e:	82 60       	ori	r24, 0x02	; 2
     a90:	8e bd       	out	0x2e, r24	; 46
     a92:	8e b5       	in	r24, 0x2e	; 46
     a94:	84 60       	ori	r24, 0x04	; 4
     a96:	8e bd       	out	0x2e, r24	; 46
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	08 95       	ret
     a9c:	8e 2f       	mov	r24, r30
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	88 30       	cpi	r24, 0x08	; 8
     aa2:	91 05       	cpc	r25, r1
     aa4:	08 f0       	brcs	.+2      	; 0xaa8 <TIMER_start+0x1c2>
     aa6:	69 c0       	rjmp	.+210    	; 0xb7a <TIMER_start+0x294>
     aa8:	fc 01       	movw	r30, r24
     aaa:	e2 5c       	subi	r30, 0xC2	; 194
     aac:	ff 4f       	sbci	r31, 0xFF	; 255
     aae:	0c 94 2d 08 	jmp	0x105a	; 0x105a <__tablejump2__>
     ab2:	85 b5       	in	r24, 0x25	; 37
     ab4:	8b 7f       	andi	r24, 0xFB	; 251
     ab6:	85 bd       	out	0x25, r24	; 37
     ab8:	85 b5       	in	r24, 0x25	; 37
     aba:	8d 7f       	andi	r24, 0xFD	; 253
     abc:	85 bd       	out	0x25, r24	; 37
     abe:	85 b5       	in	r24, 0x25	; 37
     ac0:	8e 7f       	andi	r24, 0xFE	; 254
     ac2:	85 bd       	out	0x25, r24	; 37
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	08 95       	ret
     ac8:	85 b5       	in	r24, 0x25	; 37
     aca:	84 60       	ori	r24, 0x04	; 4
     acc:	85 bd       	out	0x25, r24	; 37
     ace:	85 b5       	in	r24, 0x25	; 37
     ad0:	8d 7f       	andi	r24, 0xFD	; 253
     ad2:	85 bd       	out	0x25, r24	; 37
     ad4:	85 b5       	in	r24, 0x25	; 37
     ad6:	8e 7f       	andi	r24, 0xFE	; 254
     ad8:	85 bd       	out	0x25, r24	; 37
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	08 95       	ret
     ade:	85 b5       	in	r24, 0x25	; 37
     ae0:	8b 7f       	andi	r24, 0xFB	; 251
     ae2:	85 bd       	out	0x25, r24	; 37
     ae4:	85 b5       	in	r24, 0x25	; 37
     ae6:	82 60       	ori	r24, 0x02	; 2
     ae8:	85 bd       	out	0x25, r24	; 37
     aea:	85 b5       	in	r24, 0x25	; 37
     aec:	8e 7f       	andi	r24, 0xFE	; 254
     aee:	85 bd       	out	0x25, r24	; 37
     af0:	80 e0       	ldi	r24, 0x00	; 0
     af2:	08 95       	ret
     af4:	85 b5       	in	r24, 0x25	; 37
     af6:	84 60       	ori	r24, 0x04	; 4
     af8:	85 bd       	out	0x25, r24	; 37
     afa:	85 b5       	in	r24, 0x25	; 37
     afc:	82 60       	ori	r24, 0x02	; 2
     afe:	85 bd       	out	0x25, r24	; 37
     b00:	85 b5       	in	r24, 0x25	; 37
     b02:	8e 7f       	andi	r24, 0xFE	; 254
     b04:	85 bd       	out	0x25, r24	; 37
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	08 95       	ret
     b0a:	85 b5       	in	r24, 0x25	; 37
     b0c:	8b 7f       	andi	r24, 0xFB	; 251
     b0e:	85 bd       	out	0x25, r24	; 37
     b10:	85 b5       	in	r24, 0x25	; 37
     b12:	8d 7f       	andi	r24, 0xFD	; 253
     b14:	85 bd       	out	0x25, r24	; 37
     b16:	85 b5       	in	r24, 0x25	; 37
     b18:	81 60       	ori	r24, 0x01	; 1
     b1a:	85 bd       	out	0x25, r24	; 37
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	08 95       	ret
     b20:	85 b5       	in	r24, 0x25	; 37
     b22:	84 60       	ori	r24, 0x04	; 4
     b24:	85 bd       	out	0x25, r24	; 37
     b26:	85 b5       	in	r24, 0x25	; 37
     b28:	8d 7f       	andi	r24, 0xFD	; 253
     b2a:	85 bd       	out	0x25, r24	; 37
     b2c:	85 b5       	in	r24, 0x25	; 37
     b2e:	81 60       	ori	r24, 0x01	; 1
     b30:	85 bd       	out	0x25, r24	; 37
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	08 95       	ret
     b36:	85 b5       	in	r24, 0x25	; 37
     b38:	8b 7f       	andi	r24, 0xFB	; 251
     b3a:	85 bd       	out	0x25, r24	; 37
     b3c:	85 b5       	in	r24, 0x25	; 37
     b3e:	82 60       	ori	r24, 0x02	; 2
     b40:	85 bd       	out	0x25, r24	; 37
     b42:	85 b5       	in	r24, 0x25	; 37
     b44:	81 60       	ori	r24, 0x01	; 1
     b46:	85 bd       	out	0x25, r24	; 37
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	08 95       	ret
     b4c:	85 b5       	in	r24, 0x25	; 37
     b4e:	84 60       	ori	r24, 0x04	; 4
     b50:	85 bd       	out	0x25, r24	; 37
     b52:	85 b5       	in	r24, 0x25	; 37
     b54:	82 60       	ori	r24, 0x02	; 2
     b56:	85 bd       	out	0x25, r24	; 37
     b58:	85 b5       	in	r24, 0x25	; 37
     b5a:	81 60       	ori	r24, 0x01	; 1
     b5c:	85 bd       	out	0x25, r24	; 37
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	08 95       	ret
     b62:	83 e0       	ldi	r24, 0x03	; 3
     b64:	08 95       	ret
     b66:	83 e0       	ldi	r24, 0x03	; 3
     b68:	08 95       	ret
     b6a:	83 e0       	ldi	r24, 0x03	; 3
     b6c:	08 95       	ret
     b6e:	83 e0       	ldi	r24, 0x03	; 3
     b70:	08 95       	ret
     b72:	83 e0       	ldi	r24, 0x03	; 3
     b74:	08 95       	ret
     b76:	83 e0       	ldi	r24, 0x03	; 3
     b78:	08 95       	ret
     b7a:	83 e0       	ldi	r24, 0x03	; 3
     b7c:	08 95       	ret

00000b7e <TIMER_stop>:
     b7e:	83 30       	cpi	r24, 0x03	; 3
     b80:	38 f5       	brcc	.+78     	; 0xbd0 <TIMER_stop+0x52>
     b82:	81 30       	cpi	r24, 0x01	; 1
     b84:	79 f0       	breq	.+30     	; 0xba4 <TIMER_stop+0x26>
     b86:	18 f0       	brcs	.+6      	; 0xb8e <TIMER_stop+0x10>
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	b9 f0       	breq	.+46     	; 0xbba <TIMER_stop+0x3c>
     b8c:	23 c0       	rjmp	.+70     	; 0xbd4 <TIMER_stop+0x56>
     b8e:	83 b7       	in	r24, 0x33	; 51
     b90:	8e 7f       	andi	r24, 0xFE	; 254
     b92:	83 bf       	out	0x33, r24	; 51
     b94:	83 b7       	in	r24, 0x33	; 51
     b96:	8d 7f       	andi	r24, 0xFD	; 253
     b98:	83 bf       	out	0x33, r24	; 51
     b9a:	83 b7       	in	r24, 0x33	; 51
     b9c:	8b 7f       	andi	r24, 0xFB	; 251
     b9e:	83 bf       	out	0x33, r24	; 51
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	08 95       	ret
     ba4:	8e b5       	in	r24, 0x2e	; 46
     ba6:	8e 7f       	andi	r24, 0xFE	; 254
     ba8:	8e bd       	out	0x2e, r24	; 46
     baa:	8e b5       	in	r24, 0x2e	; 46
     bac:	8d 7f       	andi	r24, 0xFD	; 253
     bae:	8e bd       	out	0x2e, r24	; 46
     bb0:	8e b5       	in	r24, 0x2e	; 46
     bb2:	8b 7f       	andi	r24, 0xFB	; 251
     bb4:	8e bd       	out	0x2e, r24	; 46
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	08 95       	ret
     bba:	85 b5       	in	r24, 0x25	; 37
     bbc:	8b 7f       	andi	r24, 0xFB	; 251
     bbe:	85 bd       	out	0x25, r24	; 37
     bc0:	85 b5       	in	r24, 0x25	; 37
     bc2:	8d 7f       	andi	r24, 0xFD	; 253
     bc4:	85 bd       	out	0x25, r24	; 37
     bc6:	85 b5       	in	r24, 0x25	; 37
     bc8:	8e 7f       	andi	r24, 0xFE	; 254
     bca:	85 bd       	out	0x25, r24	; 37
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	08 95       	ret
     bd0:	83 e0       	ldi	r24, 0x03	; 3
     bd2:	08 95       	ret
     bd4:	83 e0       	ldi	r24, 0x03	; 3
     bd6:	08 95       	ret

00000bd8 <TIMER_reset>:
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	f1 f0       	breq	.+60     	; 0xc18 <TIMER_reset+0x40>
     bdc:	fc 01       	movw	r30, r24
     bde:	20 81       	ld	r18, Z
     be0:	23 30       	cpi	r18, 0x03	; 3
     be2:	e0 f4       	brcc	.+56     	; 0xc1c <TIMER_reset+0x44>
     be4:	31 81       	ldd	r19, Z+1	; 0x01
     be6:	3a 30       	cpi	r19, 0x0A	; 10
     be8:	d8 f4       	brcc	.+54     	; 0xc20 <TIMER_reset+0x48>
     bea:	21 30       	cpi	r18, 0x01	; 1
     bec:	49 f0       	breq	.+18     	; 0xc00 <TIMER_reset+0x28>
     bee:	18 f0       	brcs	.+6      	; 0xbf6 <TIMER_reset+0x1e>
     bf0:	22 30       	cpi	r18, 0x02	; 2
     bf2:	69 f0       	breq	.+26     	; 0xc0e <TIMER_reset+0x36>
     bf4:	17 c0       	rjmp	.+46     	; 0xc24 <TIMER_reset+0x4c>
     bf6:	fc 01       	movw	r30, r24
     bf8:	82 81       	ldd	r24, Z+2	; 0x02
     bfa:	82 bf       	out	0x32, r24	; 50
     bfc:	80 e0       	ldi	r24, 0x00	; 0
     bfe:	08 95       	ret
     c00:	fc 01       	movw	r30, r24
     c02:	82 81       	ldd	r24, Z+2	; 0x02
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	9d bd       	out	0x2d, r25	; 45
     c08:	8c bd       	out	0x2c, r24	; 44
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	08 95       	ret
     c0e:	fc 01       	movw	r30, r24
     c10:	82 81       	ldd	r24, Z+2	; 0x02
     c12:	84 bd       	out	0x24, r24	; 36
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	08 95       	ret
     c18:	83 e0       	ldi	r24, 0x03	; 3
     c1a:	08 95       	ret
     c1c:	83 e0       	ldi	r24, 0x03	; 3
     c1e:	08 95       	ret
     c20:	83 e0       	ldi	r24, 0x03	; 3
     c22:	08 95       	ret
     c24:	83 e0       	ldi	r24, 0x03	; 3
     c26:	08 95       	ret

00000c28 <TIMER_setCallBack>:
     c28:	00 97       	sbiw	r24, 0x00	; 0
     c2a:	d1 f0       	breq	.+52     	; 0xc60 <TIMER_setCallBack+0x38>
     c2c:	63 30       	cpi	r22, 0x03	; 3
     c2e:	d0 f4       	brcc	.+52     	; 0xc64 <TIMER_setCallBack+0x3c>
     c30:	61 30       	cpi	r22, 0x01	; 1
     c32:	51 f0       	breq	.+20     	; 0xc48 <TIMER_setCallBack+0x20>
     c34:	18 f0       	brcs	.+6      	; 0xc3c <TIMER_setCallBack+0x14>
     c36:	62 30       	cpi	r22, 0x02	; 2
     c38:	69 f0       	breq	.+26     	; 0xc54 <TIMER_setCallBack+0x2c>
     c3a:	16 c0       	rjmp	.+44     	; 0xc68 <TIMER_setCallBack+0x40>
     c3c:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <sg_Timer0_callBackPtr+0x1>
     c40:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <sg_Timer0_callBackPtr>
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	08 95       	ret
     c48:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <sg_Timer1_callBackPtr+0x1>
     c4c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <sg_Timer1_callBackPtr>
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	08 95       	ret
     c54:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <sg_Timer2_callBackPtr+0x1>
     c58:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <sg_Timer2_callBackPtr>
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	08 95       	ret
     c60:	83 e0       	ldi	r24, 0x03	; 3
     c62:	08 95       	ret
     c64:	83 e0       	ldi	r24, 0x03	; 3
     c66:	08 95       	ret
     c68:	83 e0       	ldi	r24, 0x03	; 3
     c6a:	08 95       	ret

00000c6c <init_theArrayOfIDs>:
	else
	{
		enu_l_sos_ret = SOS_NOT_INITIALIZED;
	}
	return enu_l_sos_ret;
}
     c6c:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <enu_sg_sos_init_status>
     c70:	81 30       	cpi	r24, 0x01	; 1
     c72:	99 f1       	breq	.+102    	; 0xcda <init_theArrayOfIDs+0x6e>
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	08 95       	ret
     c78:	51 e0       	ldi	r21, 0x01	; 1
     c7a:	54 0f       	add	r21, r20
     c7c:	85 2f       	mov	r24, r21
     c7e:	29 c0       	rjmp	.+82     	; 0xcd2 <init_theArrayOfIDs+0x66>
     c80:	e4 2f       	mov	r30, r20
     c82:	f0 e0       	ldi	r31, 0x00	; 0
     c84:	ee 0f       	add	r30, r30
     c86:	ff 1f       	adc	r31, r31
     c88:	e8 54       	subi	r30, 0x48	; 72
     c8a:	ff 4f       	sbci	r31, 0xFF	; 255
     c8c:	a0 81       	ld	r26, Z
     c8e:	b1 81       	ldd	r27, Z+1	; 0x01
     c90:	2c 91       	ld	r18, X
     c92:	e8 2f       	mov	r30, r24
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	ee 0f       	add	r30, r30
     c98:	ff 1f       	adc	r31, r31
     c9a:	e8 54       	subi	r30, 0x48	; 72
     c9c:	ff 4f       	sbci	r31, 0xFF	; 255
     c9e:	01 90       	ld	r0, Z+
     ca0:	f0 81       	ld	r31, Z
     ca2:	e0 2d       	mov	r30, r0
     ca4:	90 81       	ld	r25, Z
     ca6:	29 17       	cp	r18, r25
     ca8:	48 f4       	brcc	.+18     	; 0xcbc <init_theArrayOfIDs+0x50>
     caa:	e3 2f       	mov	r30, r19
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	11 96       	adiw	r26, 0x01	; 1
     cb0:	9c 91       	ld	r25, X
     cb2:	ef 55       	subi	r30, 0x5F	; 95
     cb4:	ff 4f       	sbci	r31, 0xFF	; 255
     cb6:	90 83       	st	Z, r25
     cb8:	3f 5f       	subi	r19, 0xFF	; 255
     cba:	0a c0       	rjmp	.+20     	; 0xcd0 <init_theArrayOfIDs+0x64>
     cbc:	92 17       	cp	r25, r18
     cbe:	40 f4       	brcc	.+16     	; 0xcd0 <init_theArrayOfIDs+0x64>
     cc0:	63 2f       	mov	r22, r19
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	91 81       	ldd	r25, Z+1	; 0x01
     cc6:	fb 01       	movw	r30, r22
     cc8:	ef 55       	subi	r30, 0x5F	; 95
     cca:	ff 4f       	sbci	r31, 0xFF	; 255
     ccc:	90 83       	st	Z, r25
     cce:	3f 5f       	subi	r19, 0xFF	; 255
     cd0:	8f 5f       	subi	r24, 0xFF	; 255
     cd2:	83 30       	cpi	r24, 0x03	; 3
     cd4:	a8 f2       	brcs	.-86     	; 0xc80 <init_theArrayOfIDs+0x14>
     cd6:	45 2f       	mov	r20, r21
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <init_theArrayOfIDs+0x72>
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	40 e0       	ldi	r20, 0x00	; 0
     cde:	43 30       	cpi	r20, 0x03	; 3
     ce0:	58 f2       	brcs	.-106    	; 0xc78 <init_theArrayOfIDs+0xc>
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	08 95       	ret

00000ce6 <SOS_timer_handelr>:
     ce6:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <uintu8_sg_sos_index_1>
     cea:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <uintu8_sg_sos_index_1+0x1>
     cee:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <uintu8_sg_sos_index_1+0x2>
     cf2:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <uintu8_sg_sos_index_1+0x3>
     cf6:	2e c0       	rjmp	.+92     	; 0xd54 <SOS_timer_handelr+0x6e>
     cf8:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <uintu8_sg_sos_index_1>
     cfc:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <uintu8_sg_sos_index_1+0x1>
     d00:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <uintu8_sg_sos_index_1+0x2>
     d04:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <uintu8_sg_sos_index_1+0x3>
     d08:	88 0f       	add	r24, r24
     d0a:	99 1f       	adc	r25, r25
     d0c:	88 0f       	add	r24, r24
     d0e:	99 1f       	adc	r25, r25
     d10:	fc 01       	movw	r30, r24
     d12:	e4 55       	subi	r30, 0x54	; 84
     d14:	ff 4f       	sbci	r31, 0xFF	; 255
     d16:	40 81       	ld	r20, Z
     d18:	51 81       	ldd	r21, Z+1	; 0x01
     d1a:	62 81       	ldd	r22, Z+2	; 0x02
     d1c:	73 81       	ldd	r23, Z+3	; 0x03
     d1e:	4f 5f       	subi	r20, 0xFF	; 255
     d20:	5f 4f       	sbci	r21, 0xFF	; 255
     d22:	6f 4f       	sbci	r22, 0xFF	; 255
     d24:	7f 4f       	sbci	r23, 0xFF	; 255
     d26:	40 83       	st	Z, r20
     d28:	51 83       	std	Z+1, r21	; 0x01
     d2a:	62 83       	std	Z+2, r22	; 0x02
     d2c:	73 83       	std	Z+3, r23	; 0x03
     d2e:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <uintu8_sg_sos_index_1>
     d32:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <uintu8_sg_sos_index_1+0x1>
     d36:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <uintu8_sg_sos_index_1+0x2>
     d3a:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <uintu8_sg_sos_index_1+0x3>
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	a1 1d       	adc	r26, r1
     d42:	b1 1d       	adc	r27, r1
     d44:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <uintu8_sg_sos_index_1>
     d48:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <uintu8_sg_sos_index_1+0x1>
     d4c:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <uintu8_sg_sos_index_1+0x2>
     d50:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <uintu8_sg_sos_index_1+0x3>
     d54:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <uintu8_sg_sos_index_1>
     d58:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <uintu8_sg_sos_index_1+0x1>
     d5c:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <uintu8_sg_sos_index_1+0x2>
     d60:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <uintu8_sg_sos_index_1+0x3>
     d64:	03 97       	sbiw	r24, 0x03	; 3
     d66:	a1 05       	cpc	r26, r1
     d68:	b1 05       	cpc	r27, r1
     d6a:	30 f2       	brcs	.-116    	; 0xcf8 <SOS_timer_handelr+0x12>
     d6c:	8a e7       	ldi	r24, 0x7A	; 122
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 1b 08 	call	0x1036	; 0x1036 <TIMER_Manager_reset>
     d74:	08 95       	ret

00000d76 <SOS_init>:
     d76:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <enu_sg_sos_init_status>
     d7a:	81 11       	cpse	r24, r1
     d7c:	1d c0       	rjmp	.+58     	; 0xdb8 <SOS_init+0x42>
     d7e:	83 e7       	ldi	r24, 0x73	; 115
     d80:	96 e0       	ldi	r25, 0x06	; 6
     d82:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <st_g_sos_timer+0x6>
     d86:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <st_g_sos_timer+0x5>
     d8a:	8a e7       	ldi	r24, 0x7A	; 122
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <TIMER_Manager_init>
     d92:	83 30       	cpi	r24, 0x03	; 3
     d94:	99 f0       	breq	.+38     	; 0xdbc <SOS_init+0x46>
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	09 c0       	rjmp	.+18     	; 0xdac <SOS_init+0x36>
     d9a:	e9 2f       	mov	r30, r25
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	ee 0f       	add	r30, r30
     da0:	ff 1f       	adc	r31, r31
     da2:	e8 54       	subi	r30, 0x48	; 72
     da4:	ff 4f       	sbci	r31, 0xFF	; 255
     da6:	11 82       	std	Z+1, r1	; 0x01
     da8:	10 82       	st	Z, r1
     daa:	9f 5f       	subi	r25, 0xFF	; 255
     dac:	93 30       	cpi	r25, 0x03	; 3
     dae:	a8 f3       	brcs	.-22     	; 0xd9a <SOS_init+0x24>
     db0:	91 e0       	ldi	r25, 0x01	; 1
     db2:	90 93 be 00 	sts	0x00BE, r25	; 0x8000be <enu_sg_sos_init_status>
     db6:	08 95       	ret
     db8:	84 e0       	ldi	r24, 0x04	; 4
     dba:	08 95       	ret
     dbc:	86 e0       	ldi	r24, 0x06	; 6
     dbe:	08 95       	ret

00000dc0 <SOS_disable>:

/*************************************/
enu_sos_status_t SOS_disable (void)
{
	enu_sos_status_t enu_l_sos_ret = SOS_E_OK;
	PORTA=0;
     dc0:	1b ba       	out	0x1b, r1	; 27
	if((SOS_FLAG_INITIALIZED==enu_sg_sos_init_status))
     dc2:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <enu_sg_sos_init_status>
     dc6:	81 30       	cpi	r24, 0x01	; 1
     dc8:	49 f4       	brne	.+18     	; 0xddc <SOS_disable+0x1c>
	{
		//stop the timer
		enu_l_sos_ret = TIMER_Manager_stop(st_g_sos_timer.u8_timerNum);
     dca:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <st_g_sos_timer>
     dce:	0e 94 14 08 	call	0x1028	; 0x1028 <TIMER_Manager_stop>
		if(TIMER_E_NOT_OK==enu_l_sos_ret)
     dd2:	83 30       	cpi	r24, 0x03	; 3
     dd4:	21 f0       	breq	.+8      	; 0xdde <SOS_disable+0x1e>
		{
			enu_l_sos_ret = TIMER_E_NOT_OK;
		}
		else
		{
			u8_sg_sos_enable_flag = FALSE;
     dd6:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <u8_sg_sos_enable_flag>
     dda:	08 95       	ret
		}
		
	}
	else
	{
		enu_l_sos_ret = SOS_NOT_INITIALIZED;
     ddc:	83 e0       	ldi	r24, 0x03	; 3
	}
	return enu_l_sos_ret;
}
     dde:	08 95       	ret

00000de0 <SOS_run>:
/******************************************************************************/
enu_sos_status_t SOS_run (void)
{		
	while (1)
	{
		if (Start_Flag==1)
     de0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Start_Flag>
     de4:	81 30       	cpi	r24, 0x01	; 1
     de6:	09 f0       	breq	.+2      	; 0xdea <SOS_run+0xa>
     de8:	9b c0       	rjmp	.+310    	; 0xf20 <SOS_run+0x140>
	enu_sos_status_t  enu_l_sos_ret = SOS_E_OK;
	uint8_t u8_l_task_index = ZERO_INIT;
	uint8_t u8_l_timerStopFlag = ZERO_INIT;
	static uint8_t f=1;
	
	if((SOS_FLAG_INITIALIZED==enu_sg_sos_init_status))
     dea:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <enu_sg_sos_init_status>
     dee:	81 30       	cpi	r24, 0x01	; 1
     df0:	b9 f7       	brne	.-18     	; 0xde0 <SOS_run>
	{
			enu_l_sos_ret = TIMER_Manager_start(&st_g_sos_timer);
     df2:	8a e7       	ldi	r24, 0x7A	; 122
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	0e 94 02 08 	call	0x1004	; 0x1004 <TIMER_Manager_start>
		
		if(TIMER_E_NOT_OK==enu_l_sos_ret)
     dfa:	83 30       	cpi	r24, 0x03	; 3
     dfc:	89 f3       	breq	.-30     	; 0xde0 <SOS_run>
		{
			enu_l_sos_ret = SOS_TIMER_E_NOK;
		}
		else
		{
				enu_l_sos_ret = init_theArrayOfIDs();
     dfe:	0e 94 36 06 	call	0xc6c	; 0xc6c <init_theArrayOfIDs>

					for(uintu8_sg_sos_index_2=0;uintu8_sg_sos_index_2<SOS_TASKS_MAX_NUM;uintu8_sg_sos_index_2++)
     e02:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <uintu8_sg_sos_index_2>
     e06:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     e0a:	10 92 a6 00 	sts	0x00A6, r1	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     e0e:	10 92 a7 00 	sts	0x00A7, r1	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     e12:	78 c0       	rjmp	.+240    	; 0xf04 <SOS_run+0x124>
					{
						PORTA=0xff;
     e14:	8f ef       	ldi	r24, 0xFF	; 255
     e16:	8b bb       	out	0x1b, r24	; 27
						if((strPtrs_tasks[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]->u16_task_priodic_time)==
     e18:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     e1c:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     e20:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     e24:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     e28:	fc 01       	movw	r30, r24
     e2a:	ef 55       	subi	r30, 0x5F	; 95
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	e0 81       	ld	r30, Z
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	ee 0f       	add	r30, r30
     e34:	ff 1f       	adc	r31, r31
     e36:	e8 54       	subi	r30, 0x48	; 72
     e38:	ff 4f       	sbci	r31, 0xFF	; 255
     e3a:	01 90       	ld	r0, Z+
     e3c:	f0 81       	ld	r31, Z
     e3e:	e0 2d       	mov	r30, r0
     e40:	82 81       	ldd	r24, Z+2	; 0x02
     e42:	93 81       	ldd	r25, Z+3	; 0x03
     e44:	a0 e0       	ldi	r26, 0x00	; 0
     e46:	b0 e0       	ldi	r27, 0x00	; 0
						(u8Arr_sg__of_taskCounters[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]))
     e48:	40 91 a4 00 	lds	r20, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     e4c:	50 91 a5 00 	lds	r21, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     e50:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     e54:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     e58:	fa 01       	movw	r30, r20
     e5a:	ef 55       	subi	r30, 0x5F	; 95
     e5c:	ff 4f       	sbci	r31, 0xFF	; 255
     e5e:	e0 81       	ld	r30, Z
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	ee 0f       	add	r30, r30
     e64:	ff 1f       	adc	r31, r31
     e66:	ee 0f       	add	r30, r30
     e68:	ff 1f       	adc	r31, r31
     e6a:	e4 55       	subi	r30, 0x54	; 84
     e6c:	ff 4f       	sbci	r31, 0xFF	; 255
     e6e:	40 81       	ld	r20, Z
     e70:	51 81       	ldd	r21, Z+1	; 0x01
     e72:	62 81       	ldd	r22, Z+2	; 0x02
     e74:	73 81       	ldd	r23, Z+3	; 0x03
				enu_l_sos_ret = init_theArrayOfIDs();

					for(uintu8_sg_sos_index_2=0;uintu8_sg_sos_index_2<SOS_TASKS_MAX_NUM;uintu8_sg_sos_index_2++)
					{
						PORTA=0xff;
						if((strPtrs_tasks[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]->u16_task_priodic_time)==
     e76:	84 17       	cp	r24, r20
     e78:	95 07       	cpc	r25, r21
     e7a:	a6 07       	cpc	r26, r22
     e7c:	b7 07       	cpc	r27, r23
     e7e:	79 f5       	brne	.+94     	; 0xede <SOS_run+0xfe>
						(u8Arr_sg__of_taskCounters[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]))
						{
							
							(strPtrs_tasks[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]->Fptr_task_callBack)();
     e80:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     e84:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     e88:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     e8c:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     e90:	fc 01       	movw	r30, r24
     e92:	ef 55       	subi	r30, 0x5F	; 95
     e94:	ff 4f       	sbci	r31, 0xFF	; 255
     e96:	e0 81       	ld	r30, Z
     e98:	f0 e0       	ldi	r31, 0x00	; 0
     e9a:	ee 0f       	add	r30, r30
     e9c:	ff 1f       	adc	r31, r31
     e9e:	e8 54       	subi	r30, 0x48	; 72
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	01 90       	ld	r0, Z+
     ea4:	f0 81       	ld	r31, Z
     ea6:	e0 2d       	mov	r30, r0
     ea8:	05 80       	ldd	r0, Z+5	; 0x05
     eaa:	f6 81       	ldd	r31, Z+6	; 0x06
     eac:	e0 2d       	mov	r30, r0
     eae:	09 95       	icall
							
							u8Arr_sg__of_taskCounters[u8Arr_sg_ID_of_taskPriorty[uintu8_sg_sos_index_2]]=0;
     eb0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     eb4:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     eb8:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     ebc:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     ec0:	fc 01       	movw	r30, r24
     ec2:	ef 55       	subi	r30, 0x5F	; 95
     ec4:	ff 4f       	sbci	r31, 0xFF	; 255
     ec6:	e0 81       	ld	r30, Z
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	ee 0f       	add	r30, r30
     ecc:	ff 1f       	adc	r31, r31
     ece:	ee 0f       	add	r30, r30
     ed0:	ff 1f       	adc	r31, r31
     ed2:	e4 55       	subi	r30, 0x54	; 84
     ed4:	ff 4f       	sbci	r31, 0xFF	; 255
     ed6:	10 82       	st	Z, r1
     ed8:	11 82       	std	Z+1, r1	; 0x01
     eda:	12 82       	std	Z+2, r1	; 0x02
     edc:	13 82       	std	Z+3, r1	; 0x03
		}
		else
		{
				enu_l_sos_ret = init_theArrayOfIDs();

					for(uintu8_sg_sos_index_2=0;uintu8_sg_sos_index_2<SOS_TASKS_MAX_NUM;uintu8_sg_sos_index_2++)
     ede:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     ee2:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     ee6:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     eea:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	a1 1d       	adc	r26, r1
     ef2:	b1 1d       	adc	r27, r1
     ef4:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <uintu8_sg_sos_index_2>
     ef8:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     efc:	a0 93 a6 00 	sts	0x00A6, r26	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     f00:	b0 93 a7 00 	sts	0x00A7, r27	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     f04:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <uintu8_sg_sos_index_2>
     f08:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <uintu8_sg_sos_index_2+0x1>
     f0c:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <uintu8_sg_sos_index_2+0x2>
     f10:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <uintu8_sg_sos_index_2+0x3>
     f14:	03 97       	sbiw	r24, 0x03	; 3
     f16:	a1 05       	cpc	r26, r1
     f18:	b1 05       	cpc	r27, r1
     f1a:	08 f4       	brcc	.+2      	; 0xf1e <SOS_run+0x13e>
     f1c:	7b cf       	rjmp	.-266    	; 0xe14 <SOS_run+0x34>
     f1e:	60 cf       	rjmp	.-320    	; 0xde0 <SOS_run>
	}
	//return enu_l_sos_ret;
	
	}
	
	else if (Start_Flag==2)
     f20:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Start_Flag>
     f24:	82 30       	cpi	r24, 0x02	; 2
     f26:	09 f0       	breq	.+2      	; 0xf2a <SOS_run+0x14a>
     f28:	5b cf       	rjmp	.-330    	; 0xde0 <SOS_run>
	{
		SOS_disable();
     f2a:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <SOS_disable>
     f2e:	58 cf       	rjmp	.-336    	; 0xde0 <SOS_run>

00000f30 <SOS_create_task>:
/**************************************/
enu_sos_status_t SOS_create_task (str_task_control_data_t *strPtr_task_control_data)
{
	enu_sos_status_t enu_l_sos_ret = SOS_E_OK;
	uint8_t u8_l_task_index_3_ = ZERO_INIT;
	if (strPtr_task_control_data->u8_task_id < SOS_TASKS_MAX_NUM)
     f30:	dc 01       	movw	r26, r24
     f32:	11 96       	adiw	r26, 0x01	; 1
     f34:	2c 91       	ld	r18, X
     f36:	11 97       	sbiw	r26, 0x01	; 1
     f38:	23 30       	cpi	r18, 0x03	; 3
     f3a:	10 f5       	brcc	.+68     	; 0xf80 <SOS_create_task+0x50>
	{
		if ((strPtr_task_control_data->Fptr_task_callBack) && strPtr_task_control_data  &&
     f3c:	15 96       	adiw	r26, 0x05	; 5
     f3e:	4d 91       	ld	r20, X+
     f40:	5c 91       	ld	r21, X
     f42:	16 97       	sbiw	r26, 0x06	; 6
     f44:	45 2b       	or	r20, r21
     f46:	f1 f0       	breq	.+60     	; 0xf84 <SOS_create_task+0x54>
     f48:	00 97       	sbiw	r24, 0x00	; 0
     f4a:	f1 f0       	breq	.+60     	; 0xf88 <SOS_create_task+0x58>
		 enu_sg_sos_init_status==SOS_FLAG_INITIALIZED && strPtrs_tasks[strPtr_task_control_data->u8_task_id]->Fptr_task_callBack==NULL)
     f4c:	30 91 be 00 	lds	r19, 0x00BE	; 0x8000be <enu_sg_sos_init_status>
{
	enu_sos_status_t enu_l_sos_ret = SOS_E_OK;
	uint8_t u8_l_task_index_3_ = ZERO_INIT;
	if (strPtr_task_control_data->u8_task_id < SOS_TASKS_MAX_NUM)
	{
		if ((strPtr_task_control_data->Fptr_task_callBack) && strPtr_task_control_data  &&
     f50:	31 30       	cpi	r19, 0x01	; 1
     f52:	e1 f4       	brne	.+56     	; 0xf8c <SOS_create_task+0x5c>
		 enu_sg_sos_init_status==SOS_FLAG_INITIALIZED && strPtrs_tasks[strPtr_task_control_data->u8_task_id]->Fptr_task_callBack==NULL)
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	f9 01       	movw	r30, r18
     f58:	ee 0f       	add	r30, r30
     f5a:	ff 1f       	adc	r31, r31
     f5c:	e8 54       	subi	r30, 0x48	; 72
     f5e:	ff 4f       	sbci	r31, 0xFF	; 255
     f60:	01 90       	ld	r0, Z+
     f62:	f0 81       	ld	r31, Z
     f64:	e0 2d       	mov	r30, r0
     f66:	45 81       	ldd	r20, Z+5	; 0x05
     f68:	56 81       	ldd	r21, Z+6	; 0x06
     f6a:	45 2b       	or	r20, r21
     f6c:	89 f4       	brne	.+34     	; 0xf90 <SOS_create_task+0x60>
		{
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]                        =strPtr_task_control_data;
     f6e:	22 0f       	add	r18, r18
     f70:	33 1f       	adc	r19, r19
     f72:	f9 01       	movw	r30, r18
     f74:	e8 54       	subi	r30, 0x48	; 72
     f76:	ff 4f       	sbci	r31, 0xFF	; 255
     f78:	91 83       	std	Z+1, r25	; 0x01
     f7a:	80 83       	st	Z, r24
}

/**************************************/
enu_sos_status_t SOS_create_task (str_task_control_data_t *strPtr_task_control_data)
{
	enu_sos_status_t enu_l_sos_ret = SOS_E_OK;
     f7c:	81 e0       	ldi	r24, 0x01	; 1
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]                        =strPtr_task_control_data;
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]->u8_task_priority      =strPtr_task_control_data->u8_task_priority;
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]->u8_task_id            =strPtr_task_control_data->u8_task_id;
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]->u16_task_priodic_time =strPtr_task_control_data->u16_task_priodic_time;
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]->Fptr_task_callBack    =strPtr_task_control_data->Fptr_task_callBack;
			strPtrs_tasks[strPtr_task_control_data->u8_task_id]->enu_task_state		   =strPtr_task_control_data->enu_task_state;
     f7e:	08 95       	ret
			enu_l_sos_ret=SOS_E_NOK;
		}
	}
	else
	{
		enu_l_sos_ret=SOS_E_NOK;
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	08 95       	ret

			
		}
		else
		{
			enu_l_sos_ret=SOS_E_NOK;
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	08 95       	ret
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	08 95       	ret
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	08 95       	ret
     f90:	80 e0       	ldi	r24, 0x00	; 0
		enu_l_sos_ret=SOS_E_NOK;
	}

	return enu_l_sos_ret;

}
     f92:	08 95       	ret

00000f94 <EXT_INTx_setCallBack_manger>:
     f94:	00 97       	sbiw	r24, 0x00	; 0
     f96:	29 f0       	breq	.+10     	; 0xfa2 <EXT_INTx_setCallBack_manger+0xe>
     f98:	63 30       	cpi	r22, 0x03	; 3
     f9a:	28 f4       	brcc	.+10     	; 0xfa6 <EXT_INTx_setCallBack_manger+0x12>
     f9c:	0e 94 53 02 	call	0x4a6	; 0x4a6 <EXT_INTx_setCallBack>
     fa0:	08 95       	ret
     fa2:	80 e0       	ldi	r24, 0x00	; 0
     fa4:	08 95       	ret
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	08 95       	ret

00000faa <EXT_INTx_Init_manger>:
     faa:	00 97       	sbiw	r24, 0x00	; 0
     fac:	39 f0       	breq	.+14     	; 0xfbc <EXT_INTx_Init_manger+0x12>
     fae:	fc 01       	movw	r30, r24
     fb0:	21 81       	ldd	r18, Z+1	; 0x01
     fb2:	23 30       	cpi	r18, 0x03	; 3
     fb4:	28 f4       	brcc	.+10     	; 0xfc0 <EXT_INTx_Init_manger+0x16>
     fb6:	0e 94 ed 02 	call	0x5da	; 0x5da <EXT_INTx_Init>
     fba:	08 95       	ret
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	08 95       	ret
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	08 95       	ret

00000fc4 <TIMER_Manager_init>:
     fc4:	1f 93       	push	r17
     fc6:	cf 93       	push	r28
     fc8:	df 93       	push	r29
     fca:	00 97       	sbiw	r24, 0x00	; 0
     fcc:	91 f0       	breq	.+36     	; 0xff2 <TIMER_Manager_init+0x2e>
     fce:	fc 01       	movw	r30, r24
     fd0:	20 81       	ld	r18, Z
     fd2:	23 30       	cpi	r18, 0x03	; 3
     fd4:	80 f4       	brcc	.+32     	; 0xff6 <TIMER_Manager_init+0x32>
     fd6:	21 81       	ldd	r18, Z+1	; 0x01
     fd8:	2a 30       	cpi	r18, 0x0A	; 10
     fda:	78 f4       	brcc	.+30     	; 0xffa <TIMER_Manager_init+0x36>
     fdc:	ec 01       	movw	r28, r24
     fde:	0e 94 e6 03 	call	0x7cc	; 0x7cc <TIMER_init>
     fe2:	18 2f       	mov	r17, r24
     fe4:	68 81       	ld	r22, Y
     fe6:	8d 81       	ldd	r24, Y+5	; 0x05
     fe8:	9e 81       	ldd	r25, Y+6	; 0x06
     fea:	0e 94 14 06 	call	0xc28	; 0xc28 <TIMER_setCallBack>
     fee:	81 2b       	or	r24, r17
     ff0:	05 c0       	rjmp	.+10     	; 0xffc <TIMER_Manager_init+0x38>
     ff2:	83 e0       	ldi	r24, 0x03	; 3
     ff4:	03 c0       	rjmp	.+6      	; 0xffc <TIMER_Manager_init+0x38>
     ff6:	83 e0       	ldi	r24, 0x03	; 3
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <TIMER_Manager_init+0x38>
     ffa:	83 e0       	ldi	r24, 0x03	; 3
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	1f 91       	pop	r17
    1002:	08 95       	ret

00001004 <TIMER_Manager_start>:
    1004:	00 97       	sbiw	r24, 0x00	; 0
    1006:	51 f0       	breq	.+20     	; 0x101c <TIMER_Manager_start+0x18>
    1008:	fc 01       	movw	r30, r24
    100a:	20 81       	ld	r18, Z
    100c:	23 30       	cpi	r18, 0x03	; 3
    100e:	40 f4       	brcc	.+16     	; 0x1020 <TIMER_Manager_start+0x1c>
    1010:	21 81       	ldd	r18, Z+1	; 0x01
    1012:	2a 30       	cpi	r18, 0x0A	; 10
    1014:	38 f4       	brcc	.+14     	; 0x1024 <TIMER_Manager_start+0x20>
    1016:	0e 94 73 04 	call	0x8e6	; 0x8e6 <TIMER_start>
    101a:	08 95       	ret
    101c:	83 e0       	ldi	r24, 0x03	; 3
    101e:	08 95       	ret
    1020:	83 e0       	ldi	r24, 0x03	; 3
    1022:	08 95       	ret
    1024:	83 e0       	ldi	r24, 0x03	; 3
    1026:	08 95       	ret

00001028 <TIMER_Manager_stop>:
    1028:	83 30       	cpi	r24, 0x03	; 3
    102a:	18 f4       	brcc	.+6      	; 0x1032 <TIMER_Manager_stop+0xa>
    102c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <TIMER_stop>
    1030:	08 95       	ret
    1032:	83 e0       	ldi	r24, 0x03	; 3
    1034:	08 95       	ret

00001036 <TIMER_Manager_reset>:
    1036:	00 97       	sbiw	r24, 0x00	; 0
    1038:	51 f0       	breq	.+20     	; 0x104e <TIMER_Manager_reset+0x18>
    103a:	fc 01       	movw	r30, r24
    103c:	20 81       	ld	r18, Z
    103e:	23 30       	cpi	r18, 0x03	; 3
    1040:	40 f4       	brcc	.+16     	; 0x1052 <TIMER_Manager_reset+0x1c>
    1042:	21 81       	ldd	r18, Z+1	; 0x01
    1044:	2a 30       	cpi	r18, 0x0A	; 10
    1046:	38 f4       	brcc	.+14     	; 0x1056 <TIMER_Manager_reset+0x20>
    1048:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <TIMER_reset>
    104c:	08 95       	ret
    104e:	83 e0       	ldi	r24, 0x03	; 3
    1050:	08 95       	ret
    1052:	83 e0       	ldi	r24, 0x03	; 3
    1054:	08 95       	ret
    1056:	83 e0       	ldi	r24, 0x03	; 3
    1058:	08 95       	ret

0000105a <__tablejump2__>:
    105a:	ee 0f       	add	r30, r30
    105c:	ff 1f       	adc	r31, r31
    105e:	05 90       	lpm	r0, Z+
    1060:	f4 91       	lpm	r31, Z
    1062:	e0 2d       	mov	r30, r0
    1064:	09 94       	ijmp

00001066 <_exit>:
    1066:	f8 94       	cli

00001068 <__stop_program>:
    1068:	ff cf       	rjmp	.-2      	; 0x1068 <__stop_program>
